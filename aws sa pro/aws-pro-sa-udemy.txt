points 
    Amazon FSx 
        for Windows File Server makes it easy for you to launch and scale reliable, performant, and secure shared file storage for your applications and end users.
    Amazon API Gateway
        easy for developers to create, publish, maintain, monitor, and secure APIs at any scale.
        you can create RESTful APIs and WebSocket APIs that enable real-time two-way communication applications.
        HTTP APIs 
            are the best choice for building APIs that only require API proxy functionality. 
        REST APIs.
            If your APIs require API proxy functionality and API management features
    AWS AppSync 
        fully managed service for real-time data queries, synchronization, and communications. 
        Provides a robust, scalable GraphQL interface for application developers to "combine data from multiple sources", including Amazon DynamoDB, AWS Lambda, and HTTP APIs.
        Real-time and offline functionality


    AWS Glue Data Catalog 
        is a centralized repository that stores metadata about your organization's data sets. It acts as an index to the location, schema, and runtime metrics of your data sources. The metadata is stored in metadata tables, where each table represents a single data store.
    AWS Application Discovery Service 
        is specifically designed to assist organizations in collecting detailed information about their on-premises infrastructure, which is crucial for cloud migration planning.
        By deploying the data collection agent on each server, the organization can obtain in-depth data on server performance, including CPU and memory usage, network I/O, and running services.
    availability SLA 
        To meet the 99.9% availability SLA a solution in a single Region with Auto Scaling and Load Balancing across multiple AZs is sufficient.
    Network load balancer 
        NLBs can use on-premises targets. 
    AWS Cloud Development Kit (AWS CDK)
        software development framework for defining cloud infrastructure in code and provisioning it through AWS CloudFormation. 
        supports TypeScript, JavaScript, Python, Java, and C#/.Net.
    AWS PrivateLink
        provides you option to connect to SaaS products privately, as if it is running on customer’s VPC itself.
        A service consumer creates a VPC endpoint to connect their VPC to an endpoint service. A service consumer must specify the service name of the endpoint service when creating a VPC endpoint. There are multiple types of VPC endpoints. You must create the type of VPC endpoint that's required by the endpoint service.
            Interface 
                Create an interface endpoint to send traffic to endpoint services that use a Network Load Balancer to distribute traffic. Traffic destined for the endpoint service is resolved using DNS.            
            GatewayLoadBalancer 
                Create a Gateway Load Balancer endpoint to send traffic to a fleet of virtual appliances using private IP addresses. You route traffic from your VPC to the Gateway Load Balancer endpoint using route tables. The Gateway Load Balancer distributes traffic to the virtual appliances and can scale with demand.            
            Gateway 
                Create a gateway endpoint to send traffic to Amazon S3 or DynamoDB using private IP addresses. You route traffic from your VPC to the gateway endpoint using route tables. Gateway endpoints do not enable AWS PrivateLink.
        AWS PrivateLink endpoint service is published by the service provider
        service consumer needs to create a VPC interface endpoint.
    NLB 
        When using an NLB with instance IDs as targets, the security group you need to focus on is the one associated with the EC2 instances themselves, not the NLB. The NLB itself doesn't have a security group; instead, it relies on the security groups attached to the instances to control inbound and outbound traffic. 
        You can associate a security group with your Network Load Balancer to control the traffic that is allowed to reach and leave the Network Load Balancer. You specify the ports, protocols, and sources to allow for inbound traffic and the ports, protocols, and destinations to allow for outbound traffic. If you don't assign a security group to your Network Load Balancer, all client traffic can reach the Network Load Balancer listeners and all traffic can leave the Network Load Balancer.
    
    AWS CodePipeline 
        is a continuous delivery service for fast and reliable application and infrastructure updates. CodePipeline builds, tests, and deploys your code every time there is a code change, based on the release process models you define.
    CloudFormation change sets 
        you first create the change set which allows you to preview how proposed changes to a stack
        once you’re happy with the changes the change set can be executed which will update the stack.
    AWS CodeBuild 
        to both build and test code. CodeBuild can be configured with custom scripts to run tests and the result of the tests can determine the subsequent actions such as proceeding to deployment.
    AWS CodeDeploy 
        automates the deployment of those artifacts to various environments like EC2, on-premises servers, Lambda functions, and ECS services
    S3 Batch Operations 
        is designed for performing large-scale batch operations on S3 objects, not for real-time, event-driven tasks like image processing. 
    Blocking public access to your Amazon S3 storage
        BlockPublicAcls
            Setting this option to TRUE causes the following behavior:
                PutBucketAcl and PutObjectAcl calls fail if the specified access control list (ACL) is public.
                PutObject calls fail if the request includes a public ACL.
                If this setting is applied to an account, then PUT Bucket calls fail if the request includes a public ACL.
        IgnorePublicAcls
            Setting this option to TRUE causes Amazon S3 to ignore all public ACLs on a bucket and any objects that it contains. This setting enables you to safely block public access granted by ACLs while still allowing PutObject calls that include a public ACL (as opposed to BlockPublicAcls, which rejects PutObject calls that include a public ACL).
        BlockPublicPolicy
            Setting this option to TRUE for a bucket causes Amazon S3 to reject calls to PutBucketPolicy if the specified bucket policy allows public access. Setting this option to TRUE for a bucket also causes Amazon S3 to reject calls to PutAccessPointPolicy for all of the bucket's same-account access points if the specified policy allows public access.
        RestrictPublicBuckets
            Setting this option to TRUE restricts access to an access point or bucket with a public policy to only AWS service principals and authorized users within the bucket owner's account and access point owner's account. This setting blocks all cross-account access to the access point or bucket (except by AWS service principals), while still allowing users within the account to manage the access point or bucket.
    Management account
        A management account is the AWS account you use to create your organization. From the management account, you can do the following:
            Create other accounts in your organization
            Invite and manage invitations for other accounts to join your organization
            Designate delegated administrator accounts
            Remove accounts from your organization
            Attach policies to entities such as roots, organizational units (OUs), or accounts within your organization
            Enable integration with supported AWS services to provide service functionality across all of the accounts in the organization.
    Policy types
        Identity-based policies
            Attach managed and inline policies to IAM identities (users, groups)
        Resource-based policies
            Attach inline policies to resources. The most common examples of resource-based policies are Amazon S3 bucket policies and IAM role trust policies. Resource-based policies grant permissions to the principal that is specified in the policy. Principals can be in the same account as the resource or in other accounts.
            Trust policy 
                The trust policy defines which principals can assume the role, and under which conditions.
                common use case is when you need to provide access to a role in account A to assume a role in Account B. To facilitate this, you add an entry in the role in account B’s trust policy that allows authenticated principals from account A to assume the role through the sts:AssumeRole API call.
        Permissions boundaries
            Use a managed policy as the permissions boundary for an IAM entity (user or role). 
            defines the maximum permissions that the identity-based policies can grant to an entity, but does not grant permissions. Permissions boundaries do not define the maximum permissions that a resource-based policy can grant to an entity.
        AWS Organizations SCPs 
            Use an AWS Organizations service control policy (SCP) to define the maximum permissions for IAM users and IAM roles within accounts in your organization or organizational unit (OU). SCPs limit permissions that identity-based policies or resource-based policies grant to IAM users or IAM roles within the account
        AWS Organizations RCPs 
            Use an AWS Organizations resource control policy (RCP) to define the maximum permissions for resources within accounts in your organization or organizational unit (OU). RCPs limit permissions that identity-based and resource-based policies can grant to resources in accounts within your organization
        Access control lists (ACLs) 
            Use ACLs to control which principals in other accounts can access the resource to which the ACL is attached. ACLs are similar to resource-based policies, although they are the only policy type that does not use the JSON policy document structure. ACLs are cross-account permissions policies that grant permissions to the specified principal. ACLs cannot grant permissions to entities within the same account.
        Session policies 
            Pass advanced session policies when you use the AWS CLI or AWS API to assume a role or a federated user. Session policies limit the permissions that the role or user's identity-based policies grant to the session. Session policies limit permissions for a created session, but do not grant permissions. 
    cross account access 
        the requester in the trusted AccountA must have an identity-based policy. That policy must allow them to make a request to the resource in the trusting AccountB. Additionally, the resource-based policy in AccountB must allow the requester in AccountA to access the resource.
            1. create role in acc B with necessary permission 
            2. add user in trust policy for that role 
            3. allow user to sts Assume role in acc A 
                so he can assume role
                can mention which roles or * for any role he can assume 
    AWS Application Migration Service 
        allows companies to lift-and-shift to AWS a large number of physical, virtual, or cloud servers without compatibility issues, performance disruption, or long cutover windows.
    AWS Control Tower
        Set up and govern a secure, compliant, multi-account AWS environment.
    Tasks and entities not restricted by SCPs
        Any action performed by the management account
        Any action performed using permissions that are attached to a service-linked role
        Register for the Enterprise support plan as the root user
        Provide trusted signer functionality for CloudFront private content
        Configure reverse DNS for an Amazon Lightsail email server and Amazon EC2 instance as the root user
        Tasks on some AWS-related services:
                Alexa Top Sites
                Alexa Web Information Service
                Amazon Mechanical Turk
                Amazon Product Marketing API
    ownership of S3 objects and disabling ACLs
        By default, Object Ownership is set to the Bucket owner enforced setting and all ACLs are disabled.
        ACLs disabled (default)
            Bucket owner enforced (default)
                ACLs are disabled, and the bucket owner automatically owns and has full control over every object in the bucket. ACLs no longer affect permissions to data in the S3 bucket. The bucket uses policies to define access control.
        ACLs enabled
            Bucket owner preferred
                The bucket owner owns and has full control over new objects that other accounts write to the bucket with the bucket-owner-full-control canned ACL.
            Object writer
                The AWS account that uploads an object owns the object, has full control over it, and can grant other users access to it through ACLs.
    service-linked role 
        is a unique type of IAM role that is linked directly to an AWS service. Service-linked roles are predefined by the service and include all the permissions that the service requires to call other AWS services on your behalf. The linked service also defines how you create, modify, and delete a service-linked role. 
    AWS recommended Organization OUs 
        Security OU (Foundational)
        Infrastructure OU (Foundational)
        Workloads OU (Application)
        Sandbox OU (Experimental)
        Exceptions OU (Procedural)
        Transitional OU (Procedural)
        Policy Staging OU (Procedural)
        Suspended OU (Procedural)
        Individual Business Users OU (Advanced)
        Deployments OU (Advanced)
        Business Continuity OU (Advanced)
    VPC endpoints for S3 
        Amazon S3 supports both Gateway endpoints and Interface endpoints.
        AWS PrivateLink for Amazon S3
            you can provision interface VPC endpoints (interface endpoints) in your virtual private cloud (VPC). These endpoints are directly accessible from applications that are on premises over VPN and AWS Direct Connect, or in a different AWS Region over VPC peering.
        Gateway endpoints for Amazon S3
            your network traffic remains on the AWS network.
            Use Amazon S3 public IP addresses
            Do not allow access from on premises
            Do not allow access from another AWS Region
            Not billed
        Interface endpoints for Amazon S3
            your network traffic remains on the AWS network.
            Use private IP addresses from your VPC to access Amazon S3
            Allow access from on premises
            Allow access from a VPC in another AWS Region by using VPC peering or AWS Transit Gateway
            Billed
    Gateway Endpoint
        It only supports connectivity to Amazon S3 and Amazon DynamoDB
        Does not require an elastic network interface.
        Requests must only originate from a VPC
        Cross-region access is not allowed
        No Cost
        Associated on a VPC Level
    Interface Endpoint
        Supports many AWS Managed services, endpoint services hosted by other AWS customers and partners, and supported AWS Marketplace partner services.
        Acts as an entry point for traffic to reach supported services through AWS PrivateLink.
        Use a private IP address
        Allow access from on-premise
        Allow cross-region access through VPC peering via Transit Gateway
        Additional charges
        Associated on a subnet level
    Athena vs Redshift 
        Redshift has much better performance than Athena for complex analytical queries.
    dreprecated services
        As of March 31, 2022, AWS has discontinued AWS Server Migration Service (AWS SMS). Going forward, AWS recommends AWS Application Migration Service (AWS MGN) as the primary migration service for lift-and-shift migrations.
    Cloud Trail
        Enable CloudTrail log file integrity validation
            CloudTrail creates a hash for every log file that it delivers. Every hour, CloudTrail also creates and delivers a file that references the log files for the last hour and contains a hash of each. This file is called a digest file. CloudTrail signs each digest file using the private key of a public and private key pair. After delivery, you can use the public key to validate the digest file.  
        CloudTrail does not capture any query activity in Aurora
        AWS CloudTrail data events
            capture the last 90 days of bucket-level events (for example, PutBucketPolicy and DeleteBucketPolicy), and you can enable object-level logging. These logs use a JSON format. After you enable object-level logging with data events, review the logs to find the IP addresses used with each upload to your bucket. It might take a few hours for AWS CloudTrail to start creating logs.
    S3 pricing 
        You pay for all bandwidth into and out of Amazon S3, except for the following:
            Data transferred out to the internet for the first 100GB per month, aggregated across all AWS Services and Regions (except China and GovCloud)
            Data transferred in from the internet.
            Data transferred between S3 buckets in the same AWS Region. 
            Data transferred from an Amazon S3 bucket to any AWS service(s) within the same AWS Region as the S3 bucket (including to a different account in the same AWS Region).
            Data transferred out to Amazon CloudFront (CloudFront).
    trigger sources
        You cannot trigger an AWS Step Function directly from an S3 event
        You cannot trigger an Amazon EC2 Auto Scaling group directly from an S3 event
    Aurora 
        Aurora lab mode 
            is used to enable Aurora features that are available in the current Aurora database version but are not enabled by default. These features are tested in development/test environments. Aurora lab mode is not relevant for capturing the log activity of Aurora DB.
    AWS X-Ray 
        helps developers analyze and debug production, and distributed applications, such as those built using a microservices architecture.
    GuardDuty Org wide
        It is inefficient and cumbersome to configure GuardDuty in all member accounts within the AWS Organizations organization. It's better to centrally manage GuardDuty for all AWS accounts by using a GuardDuty delegated administrator account within the AWS Organizations organization.
    Amazon SQS sets a visibility timeout
        a period during which Amazon SQS prevents other consumers from receiving and processing the message. Visibility timeout is a configurable parameter of SQS queues and not a temporary storage space to hold failed orders.
    VPC sharing (part of Resource Access Manager) 
        allows multiple AWS accounts to create their application resources such as EC2 instances, RDS databases, Redshift clusters, and Lambda functions, into shared and centrally-managed Amazon Virtual Private Clouds (VPCs).
        an account that owns the VPC (owner) shares one or more subnets with other accounts (participants) that belong to the same organization
        owner account cannot share the VPC itself.
    lambda
        AWS recommends that you should not over-provision your function time out settings. Always understand your code performance and set a function time out accordingly. Over-provisioning function timeout often results in Lambda functions running longer than expected and unexpected costs.    
    Kinesis Data Streams
        Use Enhanced Fanout feature of Kinesis Data Streams to support the desired read throughput for the downstream applications
    AWS OpsWorks
        lets you use Chef and Puppet to automate how servers are configured, deployed, and managed across your Amazon EC2 instances or on-premises compute environments.
    default security group:
        Allow inbound traffic from network interfaces (and their associated instances) that are assigned to the same security group.
        Allows all outbound traffic
    default rules for security group that you create
        Allows no inbound traffic
        Allows all outbound traffic
    SSL certificates
        To use a certificate with an Application Load Balancer for the same site (the same fully qualified domain name, or FQDN, or set of FQDNs) in a different Region, you must request a new certificate for each Region in which you plan to use it. To use an ACM certificate with Amazon CloudFront, you must request the certificate in the US East (N. Virginia) Region.
    AWS Storage Gateway vs AWS DataSync
        AWS DataSync
            AWS DataSync is an online data movement and discovery service that simplifies and accelerates data migrations to AWS as well as moving data between on-premises storage, edge locations, other clouds, and AWS Storage
            single DataSync task is capable of fully utilizing a 10 Gbps network link.
        AWS Storage Gateway
            to retain access to the migrated data and for ongoing updates from your on-premises file-based applications
    Amazon S3 server access logging
        captures all bucket-level and object-level events. These logs use a format similar to Apache web server logs. After you enable server access logging, review the logs to find the IP addresses used with each upload to your bucket.

    Changes introduced by disabling S3 ACLs
        when u apply bucket owner enforced setting for object ownership to disable ALCs 
        u automatically take full control over every object in bucket 
        All bucket ACLs and object ACLs are disabled 
        You as a bucket owner automatically own and have full control over every object 
        ACLs are no longer affect permissions to ur bucket. As a result, access control for you data is based on policies like IAM policies, S3 bucket policies, VPC endpoint policies and Organization policies 
    AWS Web Application Firewall (WAF) 
        protect web applications and APIs from attacks. It enables you to configure a set of rules (called a web access control list (web ACL)) that allow, block, or count web requests based on customizable web security rules and conditions that you define. 
        can protect:
            Amazon CloudFront distribution
            Amazon API Gateway REST API
            Application Load Balancer
            AWS AppSync GraphQL API
            Amazon Cognito user pool
    Types of process in Auto Scaling Group (ASG)
        Launch 
            Adds instances to the Auto Scaling group when the group scales out, or when Amazon EC2 Auto Scaling chooses to launch instances for other reasons, such as when it adds instances to a warm pool.
        Terminate 
            Removes instances from the Auto Scaling group when the group scales in, or when Amazon EC2 Auto Scaling chooses to terminate instances for other reasons, such as when an instance is terminated for exceeding its maximum lifetime duration or failing a health check.
        AddToLoadBalancer 
            Adds instances to the attached load balancer target group or Classic Load Balancer when they are launched. For more information, see Use Elastic Load Balancing to distribute incoming application traffic in your Auto Scaling group .
        AlarmNotification 
            Accepts notifications from CloudWatch alarms that are associated with dynamic scaling policies. For more information, see Dynamic scaling for Amazon EC2 Auto Scaling.
        AZRebalance 
            Balances the number of EC2 instances in the group evenly across all of the specified Availability Zones when the group becomes unbalanced, for example, when a previously unavailable Availability Zone returns to a healthy state. For more information, see Rebalancing activities.
        HealthCheck 
            Checks the health of the instances and marks an instance as unhealthy if Amazon EC2 or Elastic Load Balancing tells Amazon EC2 Auto Scaling that the instance is unhealthy. This process can override the health status of an instance that you set manually. For more information, see Health checks for instances in an Auto Scaling group.
        InstanceRefresh 
            Terminates and replaces instances using the instance refresh feature. For more information, see Use an instance refresh to update instances in an Auto Scaling group.
        ReplaceUnhealthy 
            Terminates instances that are marked as unhealthy and then creates new instances to replace them. For more information, see Health checks for instances in an Auto Scaling group.
        ScheduledActions 
            Performs the scheduled scaling actions that you create or that are created for you when you create an AWS Auto Scaling scaling plan and turn on predictive scaling. For more information, see Scheduled scaling for Amazon EC2 Auto Scaling.
    Enable termination protection for EC2 instance 
        To prevent your instance from being accidentally terminated using the Amazon EC2 API, whether you call TerminateInstances directly or using another interface such as the Amazon EC2 console, enable termination protection for the instance.
        does not prevent termination
            initiating shutdown from the instance (for example, by using an operating system command for system shutdown) when the InstanceInitiatedShutdownBehavior attribute is set to terminate
            Auto Scaling from terminating an instance when the instance is unhealthy or during scale-in events. 
            You can't enable termination protection for Spot Instances
    Instance scale-in protection
        gives you control over which instances Amazon EC2 Auto Scaling can terminate
        By default, instance scale-in protection is disabled when you create an Auto Scaling group. This means that Amazon EC2 Auto Scaling can terminate any instance in the group.
        disable the scale-in protection setting on individual instances within the Auto Scaling group. By doing so, you can continue to protect certain instances from unwanted terminations.
Notes:
    IAM
        Users
            long term credentials
        Groups
        Roles
            short term credentials
            use STS (Security Token Service)
            EC2 Instance roles
                uses EC2 metadata service
                one role at a time per Instance
            Service Roles 
                API Gateway
                Code Deploy etc
            Cross Account Roles 
        Policies
            JSON doc
                Effect(Allow) 
                Action(Attach volume) 
                Resource(arn:aws:ec2:*:*:instance/*)
                Conditions
                Policy variables 
            DENY >>> Allow
            if you want to explicity allow few, use NotAction instead of DENY.
            IAM Access Advisor 
                see permissions granted and when last accessed 
            IAM Access Analyzer 
                analyze resources that are shared with external entity 
            Types
                AWS Managed
                Customer Managed
                Inline policies 
        Resource Based Policies
            S3 Bucket
            SQS Queues etc
        IAM Roles vs Resource Based Policies
            When u(user,application or service) assume a role, u giveup ur original permissions and 
            take permissions assigned to the role 
            When using a resource based policy, the principal doesn't have to giveup any permissions
        IAM Permission Boundaries
            supported for users and roles (not groups)
            allows u to set max permissions an IAM entity can get 
        IAM Access Analyzer
            to find which resources are shared externally
            define Zone of Trust (AWS Acc or AWS Org)
            Access outside zone of trust => findings 
            Policy Validation 
                grammar and best practices 
                security warningg, errors and suggestions 
                actionable recommendations 
            Policy Generation 
                generates policy based on access activity
                CloudTrail logs is reviewed to generate policy with fine-grained permissions and 
                appropriate actions and services 
                reviews CloudTrail logs upto 90 days 
        STS (Security Token Service)
            to assume a role 
            define IAM Role within ur acc or cross-acc 
            define which principals can access this Role 
            Use STS to retrieve credentials and 
            impersonate the IAM Role u have access to (AssumeRole API)            
            temporary credentials can be valid between 15min to 12hrs
            can revoke active sessions and credentials for a role by adding policy 
            using a time statement - AWSRevokeOlderSessions 
            For granting access to 3rd party 
                3rd party AWS Acc ID 
                An External ID (secret btw u and 3rd party)
                    to uniquely associate the role btw u and 3rd party
                    must be provided when difining the trust and when assuming the role 
                    must be choosen by 3rd party
            Session Tags 
                tags that u pass when u assume a role 
                to have condition in policy 
            AssumeRole API
                access a role within ur account or cross-account 
            AssumeRoleWithSAML API 
                return credentials for user logged with SAML 
            AssumeRoleWithWebIdentity API 
                return credentials for user logged with IdP
                ex: Amazon Congnito, login with amazon, facebook, goolge or any OpenID Connect 
                AWS recommends to use Cognito Instead
            GetSessionToken API 
                for MFA, from a user or AWS account root user 
            GetFederationToken API 
                obtain temporary credentials for fred user, 
                usually a proxy app that give the creds to distributed app inside a corporate network 
        Identity Federation 
            give users outside of AWS permissions to access AWS resources in ur account 
            from Identity Providers
                SAML 2.0 
                Custom Identity Broker 
                Web Identity Federation with(out) AWS Cognito
                Single Sign-On (SSO)
            SAML 2.0 Federation
                Security Assertion Markup language 2.0 
                supports integration with Microsoft Active Directory Federations Services (ADFS)
                or any SAML 2.0 - compatible IdPs with AWS 
                Access to AWS Console, CLI and AWS API 
                    using temporary credentials
                    need to setup trust btw AWS IAM and SAML 2.0 Identity provider (both ways)
                uses STS API (AssumeRoleWithSAML API)
                old way, Amazon SSO Federation is new managed and simpler way
            Custom Identity Broker Application
                use only if Identity provider is not compatible with SAML 2.0
                Identity Broker must define appropriate IAM Role 
                use STS API (AssumeRole or GetFederationToken)
            Web Identity Federation
                Without Cognito 
                    3rd party Identity provider 
                    ex: Amazon, google, facebook etc 
                With Cognito 
                    create IAM Roles using Cognito with least privilege needed 
                    build trust between OIDC IdP and AWS 
                    3rd party <=> Cognito <=> STS 
                    supports anonymous users 
                    supports MFA 
                    data synchronization 
        ADFS (Active Directory Federation Services)
            SSO accross applications
            SAML accross 3rd party 
        AWS Directory Services 
            AWS Managed Microsoft AD 
                create ur own AD in AWS 
                manage users locally 
                supports MFA 
                establish trust connections with on-prem AD (if u have)
                    must establish Direct Connect (DX) or VPN connection
                    three kinds of forest trust 
                        aws=>on-prem
                        on-prem=>AWS 
                        aws<=>on-prem 
                    forest trust is different than synchronization (replication is not supported)
                if u want replication
                    create replica of ur AD in EC2 
                    establish trust btw AWS Managed Microsoft AD and EC2                     
            AD Connector 
                Directory Gateway (proxy) to redirect to on-prem AD 
                supports MFA 
                users are managed only on on-prem AD 
                no caching capability 
                no trust setup 
                must have VPN or Direct Connect (DX)   
                doesn't work with SQL Server, doesn;t do seamless joining, can't share directory             
            Simple AD 
                AD-compatible managed directory on AWS 
                cannot be joined with on-prem AD 
                supports joining EC2 instances, manage users and groups 
                doesn't support MFA, RDS, SQL Server, AWS SSO 
                small:500,large:5000 users 
                no trust relationship 
        AWS Organizations 
            OrganizationAccountAccessRole 
                Automatically added to all new member accounts created with AWS Organizations
                grants full admin permissions in the member account to management account
                used to perform admin tasks in member accounts 
                can be assumed by IAM users in Management account 
                must create manually if you invite an existing member account 
            Feature Modes
                Consolidated billing features 
                    single payment method
                    pricing benefits from aggregated usage 
                All Features (Default):
                    includes consolidated billing features and SCP (Service Control Policies)
                    Invited accounts must approve enabling all features 
                    can apply SCP to prevent member accounts from leaving the org 
                    can't go back to Consolidated Billing Features only 
            Reserved Instances 
                for billing purposes, consolidated billing feature treats all accounts in org as one account 
                payer account (management account) of an org can turn off Reserved Instance discount and Savings Plans
                discount sharing for any accounts in that org including the payer account.
            Moving Accounts 
                moving to new org 
                remove the member account from old org 
                send an invite to member account from new org 
                accept invite to new org from member account
            Service Control Policies (SCP)
                define allowlist and blocklist IAM actions 
                Applied at Org Unit(OU) or Account level 
                SCP doesn't apply to Management Account
                SCP applied to all users and roles in the account, including Root user 
                SCP doesn't affect Service-linked roles
                    service-linked roles enable other AWS Services to integrate with AWS Organizations
                    can't be restricted by SCPs 
                Must have explicit Allow (does not allow anything by Default)
            AI Services Opt-out Policies
                Some AI services may use ur content for continuous improvement of Amazon AI/ML services 
                create an Opt-out policy that enforces this setting accross all member accounts and AWS regions 
                can opt-out all AI services or selected services 
            Backup Policies 
                to create backup plans that define how to backup AWS resources
                gives granular control over backing up ur resources (ex:backup frequency, time window, backup region)
                can be attached to Organization Root, Specific OU or individual member account
                Immutable backup plans, appear in member accounts view only
        IAM Identity Center 
            successor to AWS Single Sign-On (SSO)
            AWS accounts in AWS Org
            Business cloud applications (Salesforce,Microsoft 365)
            SAML 2.0 enabled applications
            EC2 instances
            Identity Providers 
                Built-in Identity store in Identity Center 
                3rd party: Active Directory,OneLogin etc
            Fine-grained permissions and Assignments 
                multi-account permissions, manage access across AWS accounts in your AWS Org 
                Permission Sets 
                    a collection of one or more IAM Policies assigned to users and groups to define AWS Access
                Application Assignments
                    SSO access to many SAML 2.0 enabled applications 
                    provide required urls, certificates and metadata 
                Attribute Based Access Control (ABAC)
                    Fine grained permissions based on users attributes stored in IAM Identity Center Identity Store 
                    define permissions once, then modify AWS access by changing attributes 
        AWS Control Tower
            easy way to setup and govern a secure and compliant multi-account AWS environment based on Best Practices 
            benefits
                automate setup of ur environment in a few clicks
                automate ongoing policy management using gaurdrails 
                detect policy violations and remediate them 
                monitor compliance through interactive dashboards 
            runs on Top of AWS Orgs 
                Automatically setups AWS Orgs to organize accounts and implement SCPs
            Account Factory 
                automates account provisioning and deployments 
                enables u to create pre-approved baselines and configuration options for AWS accounts in ur Org 
                uses AWS Catalog to provision new AWS Accounts 
            Guardrail
                Detect and remediate policy violations
                Preventive 
                    using SCPs 
                    ex: Disallow creation of Access Key for root user
                Detective 
                    using AWS Config 
                    ex: Detect whether MFA is enabled for Root user 
                Levels 
                    Mandatory 
                        Automatically enabled and enforced by Control Tower 
                        ex: disallow public read access to log Archive account 
                    Strongly Recommended 
                        Based on AWS best practices(optional)
                        ex:enable encryption for EBS volumes attached to EC2 
                    Elective 
                        commonly used by enterprises (optional)
                        ex:disallow delete action without MFA in S3 buckets 
        AWS Resource Access Manager 
            share AWS resources that u own with other AWS accounts
            share with any account or with ur Org 
            Avoid resource duplication 
            VPC Subnets 
                allow to launch all resources in same Subnets 
                must be from same AWS Org 
                cannot share security groups and Default VPC 
            AWS Transit Gateway 
            Route 53 (Resolver Rules, DNS Firewall Rule Groups)
            Licence Manager configurations
            and Other AWS resources
    Security 
        CloudTrail 
            provides governance, compliance and audit for your AWS Account
            enabled by Default
            get history of events/API calls made within AWS Account
            can put logs into CloudWatch logs or S3 
            A Trail can be applied to all regions(default) or single region 
            Events Types
                Management Events 
                    operations that are performed on resources in ur AWS Acc 
                    by default logged 
                    can separate read events from write events
                Data Events
                    by default not logged 
                    ex:S3 object-level activity, AWS Lambda function execution activity (API Invoke)
            CloudTrail Insights 
                enable CloudTrail Insights to detect unusual activity in ur account
                it analyzes normal management events to create baseline
                and continuously analyzes write events to detect unusual patterns 
            CloudTrail Events Retention 
                events are stored for 90 days in CloudTrail
                to keep events beyond this period, log them to S3.
            Organizational Trail 
                it is created in management account  
                any events happened in all member accounts are logged
        Key Management Service (KMS)
            Key Types 
                Symmetric (AES-256 keys)
                    single encryption key that is used to encrypt and decrypt
                    all AWS Services use Symmetric KMS Keys 
                    u never get access to KMS key unencrypted (must call KMS API to use)
                Asymmetric (RSA & ECC key pairs)
                    Public (Encrypt) and Private (Decrypt) pair
                    used for Sign/Verify operations
                    can download public key but u can't access Private key unencrypted
                    usecase:encryption outside AWS by users who can't call KMS API 
            Types of KMS Keys 
                Customer Managed Keys 
                    create, manage and use, can enable or disable
                    can have rotation policy 
                    can add key policy(resource policy) & audit in CloudTrail
                AWS Managed Keys 
                    used by AWS service (s3,ebs,redshift etc)
                    managed by AWS, auto rotates every year 
                    view key policy and audit in CloudTrail
                AWS Owned Keys 
                    created and managed by AWS, used by some AWS services to protect ur resources
                    used in multiple AWS accounts, they are not in ur AWS account
                    u can't view, use, track or audit 
            KMS Key Material Origin 
                Identifies source of the key material in KMS Key 
                can't be changed after creation
                KMS (AWS_KMS) - default
                    AMS KMS creates and manages the key material in its own key store 
                External
                    u import key material into KMS 
                    u responsible for securing and managing the key material outside of AWS 
                    must be 256-bit Symmetric Key 
                    can't be used with custom Key Store (CloudHSM)
                    manual key rotation (auto not supported)
                Custom Key Store (AWS_CLOUDHSM)
                    AWS KMS creates the key material in a custom key store (CloudHSM Cluster)
                    integrate KMS with CloudHSM cluster as a custom Ley Store 
                    cryptographis operations are performed in HSMs 
                    usecases
                        u need direct control over HSMs 
                        KMS Keys needs to be stored in dedicated HSMs 
            KMS Multi-Region Keys
                set of identical keys in different AWS Regions that can be used interchangeably
                encrypt in one region decrypt in other region 
                no need to re-encrypt or make cross-region API calls
                Multi-region keys have same key ID, key material etc 
                Not global, primary + replicas
                each multi-region key is managed independently 
                only one primary key at a time, replica can be promoted to primary 
        SSM Parameter Store
            secure storage for configuration and secrets 
            optional seamless encryption with KMS 
            version tracking 
            can store parameters with hierarchy (folders)
            Parameter Types
                Standard 
                    10K per AWS account and region 
                    max 4KB size for value 
                    no parameter policies
                    free 
                Advanced
                    100K per AWS account and region
                    max 8KB size for value 
                    Parameter Policies
                        allow to assign time-to-live(TTL) (expiry date)
                        can assign multiple policies at a time
                    0.05$ per parameter per month 
        AWS Secrets Manager 
            to store secrets (ex:passwords,API keys)
            can force rotation of secrets every X days
                automate generation of new secrets on rotation (uses Lambda)
            control access to secrets using Resource-based Policy
            Sharing accross Accounts 
                allow other acc user to decrypt via Secrets Manager Service
                share secret using Resource-based Policy
        SSM Parameter Store vs AWS Secrets Manager
            Secret Manager 
                $$$
                automatic rotation of secrets with AWS Lambda
                KMS encryption is Mandatory
                can integrate with CloudFormation 
            SSM Parameter Store
                $
                simple API 
                No secret rotation (can enable rotation using Lambda triggered by EventBridge)
                KMS encryption is optional
                can integrate with CloudFormation 
                can pull Secrets Manager secret using SSM Parameter Store API 
        RDS Security
            KMS encryption at rest for underlying EBS volumes/snapshots 
            Transparent Data Encryption (TDE) for Oracle and SQL Server 
            SSL encryption to RDS is possible for all DB 
            IAM authentication for MySQL, PostgreSQL and MariaDB 
            Authorization still happens at RDS level (not IAM)
            can copy un-encrypted RDS snapshot to encrypted one 
            CloudTrail can't be used to track queries made with RDS 
        SSL/TLS 
            Secure Sockets Layer (SSL) used to encrypt connections 
            Transport Layer Security (TLS) is newer version 
            nowadays, TLS certificates are mainly used, people still asume them as SSL 
            Server Name Indication (SNI)
                solves problem of loading multiple SSL certificates onto one web server(to server multiple websites)
                it's a newer protocol and requires the client to indicate the hostname of target 
                server in initial SSL handshake 
                server will then find correct certificate or return default one.
                Only works for ALB & NLB, CloudFront. 
                Doesn't work for CLB (classic load balancer)
            Man in the Middle Attacks (MIMA)
                Prevent 
                    use HTTPS 
                    use DNS that has DNSSEC 
        AWS Certificate Manager 
            to host public SSL certificates in AWS 
            Buy ur own and upload them using CLI 
            or Have ACM provision and renew public SSL certificates for u (free)
            ACM loads SSL certs on 
                Load Balancers (including one created by Elastic Beanstalk)
                CloudFront distributions 
                APIs on API Gateways 
            Possibility of creating public certificates 
                must verify public DNS 
                must be issued by a trusted public certificate authority (CA)
            Possibility of creating private certificates 
                for ur internal applications
                u create ur own CA 
                ur apps must trust ur private CA 
            Certificate renewal 
                Automatically done if generated provisioned by ACM 
                any manually uploaded certs must be renewed manually and re-uploaded 
            ACM is a regional service 
                u need to issue a SSL cert in each region where ur application deployed 
                u can't copy certs accross regions 
        CloudHSM 
            KMS => AWS manages software for encryption 
            CloudHSM => AWS only provisions encryption hardware 
            dedicated hardware (HSM=Hardware Security Module)
            u manage ur own encryption keys entirely (not AWS)
            supports both Symmetric and Asymmetric encryption (SSL/TLS keys)
            must use CloudHSM Client Software
            usecase:SSE-C (server side encryption, Customer managed) encryption
            High Availability 
                add CloudHSM clusters across Multiple AZs 
        S3 Security
            Encryption
                SSE-S3: encrypts S3 objects using keys handled & managed by AWS 
                SSE-KMS: leverage KMS to manage encryption keys 
                    key usage appears in CloudTrail
                    objects made public can't be read 
                SSE-C: manage your own encryption keys 
                Glacier: All data is AES-256 encrypted, key under AWS control
                Encryption in Transit(SSL/TLS)
                    HTTP: not encrypted
                    HTTPS: encrypted
                        Mandatory for SSE-C 
            Security
                User based 
                    IAM Policies
                Resource based 
                    Bucket policies
                        bucket wide rules from the S3 console
                        grant access to another account(allow Cross-Account)
                        to grant public access to bucket
                        force object to be encrypted at upload 
                        Optional Conditions on:
                            SourceIP, VpcSourceIp
                            Source VPC, Source VPC Endpoint 
                            CloudFront Origin Identity
                            MFA
                    Object Access Control List(ACL)
                        finer grain 
                    Bucket Access Control List(ACL)
                        less common 
            S3 Pre-Signed URLs
                can generate URLs using SDK or CLI 
                for downloads 
                    easy, can use CLI 
                for uploads 
                    hard, must use SDK 
                valid for default of 3600sec 
                users given a pre-signed URL inherit the permissions of person who generated the URL for GET/PUT 
            VPC Endpoint Gateway for S3 
                to access bucket from private instance in a VPC 
            S3 Object Lock 
                Write Once Read Many (WORM)
                block object version deletion for a specific amount of time 
            Glacier Vault Lock 
                WORM 
                lock the policy for future edits (can no longer be changed)
                for compliance and data retention 
            S3 Access Points 
                can grant (Read/Write) access to prefix (/com/finance/*)
                simplify security management
                each access point has it's own DNS name 
                Multi-Region Access Points 
                    provide a global endpoint that span S3 buckets in multiple regions 
                    Dynamically route requests to nearest S3 bucket
                    Bi-directional S3 bucket replication rules are created to keep data in Sync across regions 
                    Failover controls 
                        allows to shift requests across S3 buckets in different AWS regions within minutes 
            S3 Object Lambda 
                to change object before it is retrieved by caller application
        AWS Shield 
            protects from DDoS attacks 
            Standard
                protects against DDoS for ur website and applications for all the customers 
                at no additional costs 
                free and activated for every AWS customer
                protects from layer 3 or layer 4 attacks                 
            Advanced
                24/7 premium DDoS protection
                protect against attacks on EC2, ELB, CloudFront, Global Accelerator and Route 53
                protect against higher fee during usage spikes due to DDoS         
            CloudFront and Route 53 
                Availability protection using global edge network
                Combined with Shield, provides DDoS attack mitigation at the edge 
        AWS WAF 
            filter specific requests based on rules
            protects web app from common web exploits (Layer 7)
            Deploy on API Gateway (rules running at regional or edge level)
            Deploy on CloudFront (rules run globally on edge locations)
            Deploy on AppSync (protect ur GraphQL APIs)
            not for DDoS protection
            Define Web ACLs 
                rules can include IP addresses, HTTP headers, HTTP body, or URI stings 
                protects from common attack - SQL injection and Cross-Site Scripting (XSS) 
                Size contraints, Geo match 
                Rate based rules 
            Rule Actions 
                Count, Allow, Block or Captcha 
            Managed Rules 
                library of over 190 managed rules 
                ready-to-use rules managed by AWS and AWS Marketplace Sellers 
                Baseline Rule Groups 
                    general protection from common threats 
                Usecase specific rule Groups
                IP Reputation Rule Groups
                    block requests based on source 
                Bot Control Managed Rule Group 
            Logging 
                can send logs to 
                    CloudWatch
                    S3
                    Kinesis Data Firehose 
        AWS Firewall Manager 
            manage rules in all accounts of an Org 
            Security Policy 
                WAF rules (ALB,API Gateways,CloudFront)
                AWS Shield Advanced (ALB,CLB,NLB,ElasticIP,CloudFront)
                Security groups (EC2,ALB and ENI resources in VPC)
                AWS Network Firewall (VPC level)
                Amazon Route53 DNS Firewall
                policies created at region level 
            Rules are applied to new resources as they are created across all future accounts in Org
        Amazon Inspector 
            automated security assessments 
            EC2 Intances 
                leverages AWS System Manager (SSM) agent 
                analyze against unintended network accessibility 
                analyze the running OS against know vulnerabilities
            Container Images push to ECR 
            Lambda Functions 
                identifies software vulnerabilities in function code and package dependencies
            Reporting & integration with AWS Security Hub 
            Send fundings to Amazon EventBridge
        AWS Config 
            helps with auditing and recording compliance of AWS resources 
            record configurations and changes over time     
            Config Rules 
                AWS managed config rules (over 75)
                can make custom config rules (must define in Lambda function)
                    evaluate if each EC2 instance is t2.micro 
                rules can be evaluated/triggered
                    for each config change 
                    regular time intervals 
                trigger Amazon EventBridge if rule is non-compliant (chain with lambda)
                can have auto remediations through SSM Automations 
                    can stop instances 
        AWS Managed Logs 
            Load balancer access logs (to S3)
            CloudTrail logs (to S3 and CloudWatch logs) 
            VPC Flow logs (to S3 and CloudWatch logs and Kinesis Data Firehose) 
            Route53 access logs (to CloudWatch logs) 
            S3 access logs (to S3) 
            CloudFront access logs (to S3) 
            AWS Config (to S3) 
        Amazon GuardDuty 
            Inteligent Threat discovery to protect ur account 
            uses ML algos,anomaly detection,3rd party data 
            Input data 
                CloudTrail Event logs 
                    management events 
                    S3 Data events 
                VPC Flow Logs 
                DNS logs 
                and some Optional features
            can setup EventBridge rules to notify in case of findings
            *can Protect CryptoCurrency attacks 
            Delegated Administrator
                Org member can be designated to be GuardDuty Delegated Administrator
                have full permissions to enable and manage GuardDuty for all accounts in Org 
        AWS Security Hub 
            central security tool to manage security across several AWS accounts and automate security checks
            Integrated dashboards showing current security and compliance status 
            Automatically aggregate alerts in predefined or personal findings formats from 
            various Services and Partner tools
            must enable AWS Config 
        Amazon Detective
            quickly finds the root cause of security issues 
            using ML and graphs 
            Automatically collects and process events from VPC Flow logs,CloudTrail,GuardDuty
            and create a unified view 
            produces visualizations with details and context to get to root cause 

        Questions 
            An EC2 instance in a public subnet is trying to access an Amazon S3 bucket. 
            This EC2 instance often starts and stops. You would like to restrict access 
            to that EC2 instance only. How can you do it?
                Attach an Elastic IP to the EC2 instance and create an S3 bucket policy with 
                a condition limiting access to the EC2 elastic IP
                since SourceIP doesn't work with private IP 
            You want an easy way to deploy and manage WAF Rules, Security Groups, AWS Shield, .etc. 
            in all those accounts instead of managing them one by one.
                AWS Firewall Manager 
            Which of the following IAM Condition key you can use to restrict access only from a specific AWS Organization?
                aws:PrincipalOrgID 
    
    Compute and Load Balancing 
        EC2
            EC2 Instance Types 
                R:for apps that needs lot of RAM - in-memory caches 
                C:for apps that needs good CPU - compute/databases
                M:for apps that are balanced - general/webapp
                I:for apps that need good local I/O(instance storage) - database
                G:for apps that need a GPU - video redering/ML
                T2/T3:burstable instances (upto capacity)
                T2/T3:unlimited - unlimited burst 
            Placement Groups 
                Cluster 
                    clusters instances into a low-latency group in single AZ 
                    Great Network - 10Gbps between instances
                Spread 
                    spreads instances across underlying hardware (max 7 per placement group per AZ)
                Partition 
                    spreads instances across many different partitions (which rely on different sets of racks) within AZ 
                    Scales to 100s of EC2 instances per group 
                    7 partitions per AZ
                    usecase:Hadoop,Cassandra,Kafka
                Move in/out 
                    stop instance
                    use CLI to modify instance Placement Group
                    start instance
            Instance Launch Types
                On-Demand Instances
                Spot Instances 
                Reserved Instances (min 1yr)
                    Reserved
                    Convertable Reserved Instances
                        flexible instances 
                    Highest to lowest discount: All upfront, Partial Upfront and no Upfront
                Dedicated Instances 
                    no other customers will share your hardware 
                Dedicated Hosts 
                    book an entire physical server, control instance placement
                    great for software licences that operate at core or CPU socket level 
                    can define host affinity so that instance reboots are kept on same host 
            EC2 Graviton
                Graviton processors deliver best price performance 
                Supports many Linus OS,Amazon Linux 2,Redhat,SUSE,Ubuntu
                Not available for Windows
                Graviton2 
                    40% better price performance over comparable 5th gen x86-based instances
                Graviton3 
                    upto 3x better performance than Graviton2
        Auto Scaling Group (ASG)
            Dynamical Scaling Policies
                Target Tracking Scaling 
                    usecase:to keep avg ASGroup CPU to stay at around 40%
                Simple/Step Scaling 
                    when CloudWatch alarm triggered (like CPU>70%) add 2 instances 
                Scheduled Actions 
                    Anticipate Scaling based on know usage patterns 
            Predictive Scaling 
                continuously forecast load and schedule scaling ahead
            Spot Fleet support
                mix of Spot instances and On-demand Instances
            Life-cycle hooks 
                perform action before an instance is in service or before it is terminated 
            To upgrade an AMI 
                must update the launch configuration/template
                then terminate the instances manually(CloudFormation can help)
                or use EC2 instance Refresh for Auto Scaling 
            Instance Refresh
                updates launch template and then re-create all EC2 instances
                set minimum healthy percentage, so that it won't terminate all instances at once 
                can specify warm-up time(how long until the instance is ready to use)
            Health Checks 
                EC2 Status Checks
                ELB Health Checks(HTTP)
                ASGroup first terminates unhealthy one then lauches new instance 
        Spot Instances
            upto 90% discount compared to on-demand 
            define max spot price 
                get instance while current spot price < max spot price 
                if current spot price > max spot price can choose to
                stop or terminate instance with 2 minutes grace period 
            usage 
                batch jobs, data analysis or workloads that are resilient to failures
                not good for critical jobs or databases 
        Spot Fleets 
            set of Spot instances + (optional) on-demand Instances
            automatically request spot instances with lowest price
            try to meet target capacity with price constraint 
                define possible launch pools 
                    instance type,OS, availability zone
                    can have multiple launch pools 
            spot fleet stops launching instances when reaching capacity or max cost 
            strategy to allocate spot instances 
                lowestPrice 
                    low cost, short workloads
                diversified 
                    availability,long workload 
                capacity optimized 
                    pool with optimal capacity for the number of instances
                priceCapacity Optimized 
                    pools with highest capacity available, 
                    then select the pool with the lowest price 
        Docker
            apps are packaged in containers that can be run on any OS
        Amazon Elastic Container Service (Amazon ECS)
            Amazon’s own container platform
            Run Microservices
                Run multiple Docker containers on the same machine
                Easy Service Discovery features to enhance communication
                Direct integration with Application Load Balancer and Network Load Balancer
                Auto Scaling capability
            Run Batch Processing / Scheduled Tasks
                Schedule ECS tasks to run on On-demand / Reserved / Spot instances
            Migrate Applications to the Cloud
                Dockerize legacy applications running on-premises
                Move Docker containers to run on Amazon ECS
            ECS Cluster
                logical grouping of EC2 instances
            ECS Service
                defines how many tasks should run and how they should be run
            Task Definitions
                metadata in JSON form to tell ECS how to run a Docker container 
                (image name, CPU, RAM, …)
            ECS Task
                an instance of a Task Definition, a running Docker container(s)
            ECS IAM Roles
                EC2 Instance Profile
                    used by the EC2 instance 
                    (e.g., make API calls to ECS, send, logs, …)
                ECS Task IAM Role
                    allow each task to have a specific role 
                    (e.g., make API calls to S3, DynamoDB, …)
            ALB Integration
                Dynamic Port Mapping
                Allows you to run multiple instances of the same application 
                on the same EC2 instance
                The ALB finds the right port on your EC2 Instances
                Use cases
                    Increased resiliency even if running on one EC2 instance
                    Maximize utilization of CPU / cores
                    Ability to perform rolling upgrades without impacting app uptime
        
            Security & Networking
                You can inject secrets and configurations as Environment Variables into running Docker containers
                Integration with SSM Parameter Store and Secrets Manager
                ECS Tasks Networking
                    none
                        no network connectivity, no port mappings
                    bridge
                        uses Docker’s virtual container-based network
                    host
                        bypass Docker’s network, uses the underlying host network interface
                    awsvpc
                        Every tasks launched on the instance gets its own ENI and a private IP address
                        Simplified networking, enhanced security, Security Groups, monitoring, VPC Flow Logs
                        Default mode for Fargate tasks
            Service Auto Scaling
                Automatically increase/decrease the desired number of tasks
                ECS Service Auto Scaling (task level) ≠ EC2 Auto Scaling (EC2 instance level)
                Fargate Auto Scaling is much easier to setup (because Serverless)
                Target Tracking
                    scale based on target value for a specific CloudWatch metric
                Step Scaling
                    scale based on a specified CloudWatch Alarm
                Scheduled Scaling
                    scale based on a specified date/time (predictable changes)
            Spot Instances
                ECS Classic (EC2 Launch Type)
                    underlying EC2 instances as Spot Instances (managed by an ASG)
                    Good for cost savings, but will impact reliability
                AWS Fargate
                    Specify minimum of tasks for on-demand baseline workload
                    Add tasks running on FARGATE_SPOT for cost-savings (can be reclaimed by AWS)
            Amazon ECS Anywhere
                run containers on Customer-managed infrastructure (on-premises, VMs, …)
                Allows customers to deploy native Amazon ECS tasks in any environment
                Fully-managed Amazon ECS Control Plane
                ECS Container Agent and SSM Agent needs to be installed
                "EXTERNAL" Launch Type
                Use cases
                    Meet compliance, regulatory, and latency requirements
                    Run apps outside AWS Regions and closer to their other services
                    On-premises ML, video processing, data processing, …

        Amazon ECR - Elastic Container Registry
            Store and manage Docker images on AWS
            Private and Public repository (Amazon ECR Public Gallery https//gallery.ecr.aws)
            Access is controlled through IAM
            Supports image vulnerability scanning, versioning, image tags, image lifecycle etc 
            Cross Region Replication
                ECR private registry supports both cross-Region and cross-account replication
            Image Scanning
                Manual Scan or Scan on Push
                Basic Scanning
                    Common CVE
                Enhanced Scanning
                    Leverages Amazon Inspector (OS & Programming Language vulnerabilities)
                Scan results can be retrieved from within the AWS console
        AWS Fargate
            Amazon’s own Serverless container platform
            Works with ECS and with EKS
            You do not provision the infrastructure(no EC2 instances to manage)
            To scale, just increase the number of tasks. Simple! No more EC2 instances
        Amazon Elastic Kubernetes Service (Amazon EKS)
            Amazon’s managed Kubernetes (open source)
            Kubernetes is cloud-agnostic (can be used in any cloud – Azure, GCP…)
            supports EC2 if you want to deploy worker nodes or Fargate to deploy serverless containers
            For multiple regions, deploy one EKS cluster per region
            Node Types
                Managed Node Groups
                    Creates and manages Nodes (EC2 instances) for you
                    Nodes are part of an ASG managed by EKS
                    Supports On-Demand or Spot Instances
                Self-Managed Nodes
                    Nodes created by you and registered to the EKS cluster and managed by an ASG
                    You can use prebuilt AMI - Amazon EKS Optimized AMI
                    Supports On-Demand or Spot Instances
                AWS Fargate
                    No maintenance required; no nodes managed
            Data Volumes
                Need to specify StorageClass manifest on your EKS cluster
                Leverages a Container Storage Interface (CSI) compliant driver
                supports Amazon EBS, Amazon EFS (works with Fargate), Amazon FSx for Lustre, 
                Amazon FSx for NetApp ONTAP
            Amazon EKS Anywhere 
                Create and operate Kubernetes clusters created outside AWS                
                Leverage the Amazon EKS Distro (AWS’ bundled release of Kubernetes) 
                Reduce support costs and avoid maintaing redundant 3rd party tools 
                Install using the EKS Anywhere Installer 
                Optionally use the EKS Connector to connect the EKS Anywhere clusters to AWS 
                    Fully Connected & Partially Disconnected
                        you can connect to Amazon EKS Anywhere clusters to AWS,and leverage the EKS console
                    Fully Disconnected 
                        must install the EKS Distro and leverage open-source tools to manage your clusters
        AWS App Runner
            Fully managed service that makes it easy to deploy web applications and APIs at scale
            No infrastructure experience required
            Start with your source code or container image
            Automatically builds and deploy the web app
            Automatic scaling, highly available, load balancer, encryption
            VPC access support
            Connect to database, cache, and message queue services
            Use cases web apps, APIs, microservices, rapid production deployments
        AWS Lambda
            Language Support (runtimes)
                Node.js (JavaScript)
                Python
                Java 
                C# (.NET Core) / Powershell
                Ruby
                Custom Runtime API (community supported, example Rust or Golang)
            Lambda Container Image
                The container image must implement the Lambda Runtime API
                ECS / Fargate is preferred for running arbitrary Docker images
            Limits to know
                RAM 
                    128 MB to 10,240 MB (10 GB)
                CPU 
                    is linked to RAM (cannot be set manually)
                    2 vCPUs are allocated at 1,769 MB of RAM
                    6 vCPUs are allocated at 10,240 MB of RAM
                Timeout
                    up to 15 minutes
                /tmp Storage – 10,240 MB
                Deployment Package
                    50 MB (zipped) , 250 MB (unzipped) including layers 
                Concurrent Executions
                    1000 (soft limit that can be increased)
                Container Image Size
                    10 GB
                Invocation Payload (request/response)
                    6 MB (sync), 256 KB (async)
            Concurrency and Throttling
                Concurrency limit
                    up to 1000 concurrent executions
                Can set a "reserved concurrency" at the function level (=limit)
                Each invocation over the concurrency limit will trigger a "Throttle"
                Can request a quota increase in AWS Service Quotas
            CodeDeploy 
                can help you automate traffic shift for Lambda aliases
                Feature is integrated within the SAM framework
                Linear
                    grow traffic every N minutes until 100% 
                    Linear10PercentEvery3Minutes 
                    Linear10PercentEvery10Minutes 
                Canary try X percent then 100% 
                    Canary10Percent5Minutes 
                    Canary10Percent30Minutes
                AllAtOnce immediate 
                Can create Pre & Post Traffic hooks to check the health of the Lambda function
            Logging, Monitoring and Tracing
                CloudWatch
                    AWS Lambda execution logs are stored in AWS CloudWatch Logs
                    AWS Lambda metrics are displayed in AWS CloudWatch Metrics (successful 
                    invocations, error rates, latency, timeouts, etc…)
                    Make sure your AWS Lambda function has an execution role with an IAM 
                    policy that authorizes writes to CloudWatch Logs
                X-Ray
                    It’s possible to trace Lambda with X-Ray
                    Enable in Lambda configuration (runs the X-Ray daemon for you)
                    Use AWS SDK in Code
                    Ensure Lambda Function has correct IAM Execution Role
    load balancer on AWS
        Classic Load Balancer (CLB) (v1 - old generation) – 2009 – CLB
            HTTP, HTTPS, TCP, SSL (secure TCP)
            Health Checks can be HTTP (L7) or TCP (L4) based including with SSL
            Supports only one SSL certificate 
                The SSL certificate can have many SAN (Subject Alternate Name), 
                but the SSL certificate must be changed anytime a SAN is added / edited / removed
                Better to use ALB with SNI (Server Name Indication) if possible 
                Can use multiple CLB if you want distinct SSL certificates
        Application Load Balancer (ALB) (v2 - new generation) – 2016 – ALB 
            HTTP, HTTPS, WebSocket
            Application load balancers is Layer 7 (HTTP)
            Load balancing to multiple HTTP applications across machines(target groups)
            Load balancing to multiple applications on the same machine (ex containers)
                great fit with ECS, has dynamic port mapping
            Support for HTTP/2 and WebSocket
            Support redirects (from HTTP to HTTPS for example)
            Routing Rules for path, headers, query string
            Target Groups
                EC2 instances (can be managed by an Auto Scaling Group) – HTTP 
                ECS tasks (managed by ECS itself) – HTTP 
                Lambda functions – HTTP request is translated into a JSON event
                IP Addresses – must be private IPs
            Health checks are at the target group level
        Network Load Balancer(NLB) (v2 - new generation) – 2017 – NLB 
            TCP, TLS (secure TCP), UDP
            Network load balancers (Layer 4)
            Forward TCP & UDP traffic to your instances
            Handle millions of request per seconds
            Less latency ~100 ms (vs 400 ms for ALB)
            NLB has one static IP per AZ, and supports assigning Elastic IP
                helpful for whitelisting specific IP
            NLB are used for extreme performance, TCP or UDP traffic
            Not included in the AWS free tier
            Target Groups
                EC2 instances
                IP Addresses – must be private IPs
                Application Load Balancer
            Zonal DNS Name
                Resolving Regional NLB DNS name returns the IP addresses for all NLB nodes in all enabled AZs
                    my-nlb-1234567890abcdef.elb.us-east-1.amazon.aws.com
                NLB has DNS names for each of its nodes
                Use to determine the IP address of each node
                us-east-1a.my-nlb-1234567890abcdef.elb.us-east1.amazon.aws.com
                Used to minimize latency and data transfer costs
                You need to implement app specific logic

        Gateway Load Balancer – 2020 – GWLB 
            Operates at layer 3 (Network layer) – IP Protocol - IP packets
            Deploy, scale, and manage a fleet of 3rd party network virtual appliances in AWS
            Example Firewalls, Intrusion Detection and Prevention Systems, Deep Packet Inspection 
            Systems, payload manipulation etc 
            Combines the following functions
                Transparent Network Gateway
                    single entry/exit for all traffic
                Load Balancer
                    distributes traffic to your virtual appliances
            GENEVE (Generic Network Virtualization Encapsulation)
                is a network virtualization protocol, also known as an overlay tunnel protocol, 
                defined by the IETF to create and manage virtual networks over physical network infrastructure
            Uses the GENEVE protocol on port 6081
            Target Groups
                EC2 instances
                IP Addresses – must be private IPs
        Cross-Zone Load Balancing
            With Cross Zone Load Balancing
                each load balancer instance distributes evenly across all registered instances in all AZ
            Without Cross Zone Load Balancing
                Requests are distributed in the instances of the node of the Elastic Load Balancer
            Classic Load Balancer
                Disabled by default 
                No charges for inter AZ data if enabled 
            Application Load Balancer
                Always on (can’t be disabled)
                No charges for inter AZ data 
            Network Load balancer  
                Disabled by default 
                You pay charges ($) for inter AZ data if enabled
            Gateway Load Balancer 
                Disabled by Default
                You pay charges ($) for inter AZ data if enabled
        Sticky Sessions (Session Affinity)
            same client is always redirected to the same instance behind a load balancer
            works for Classic Load Balancers & Application Load Balancers
            The “cookie” used for stickiness has an expiration date you control
            Use case make sure the user doesn’t lose his session data
            Enabling stickiness may bring imbalance to the load over the backend EC2 instances
        Request Routing Algorithms
            Least Outstanding Requests
                The next instance to receive the request is the instance that has the lowest number 
                of pending/unfinished requests
                Works with Application Load Balancer and Classic Load Balancer (HTTP/HTTPS)
            Round Robin
                Equally choose the targets from the target group
                Works with Application Load Balancer and Classic Load Balancer (TCP)
            Flow Hash
                Selects a target based on the protocol, source/destination IP address, 
                source/destination port, and TCP sequence number
                Each TCP/UDP connection is routed to a single target for the life of the connection
                Works with Network Load Balancer
    API Gateway
        Helps expose Lambda, HTTP & AWS Services as an API
        API versioning, authorization, traffic management (API keys, throttles), 
        huge scale, serverless, req/resp transformations, OpenAPI spec, CORS
        Limits to know
            29 seconds timeout
            10 MB max payload size 
        Deployment Stages
            API changes are deployed to “Stages” (as many as you want)
            Use the naming you like for stages (dev, test, prod)
            Stages can be rolled back as a history of deployments is kept
        Integrations
            HTTP
                Expose HTTP endpoints in the backend 
                Example internal HTTP API on premise, Application Load Balancer…
                Why? Add rate limiting, caching, user authentications, API keys, etc… 
            Lambda Function
                Invoke Lambda function 
                Easy way to expose REST API backed by AWS Lambda
            AWS Service
                Expose any AWS API through the API Gateway?
                Example start an AWS Step Function workflow, post a message to SQS
                Why? Add authentication, deploy publicly, rate control… 
        Endpoint Types
            Edge-Optimized (default) 
                For global clients
                Requests are routed through the CloudFront Edge locations (improves latency)
                The API Gateway still lives in only one region
            Regional 
                For clients within the same region
                Could manually combine with CloudFront (more control over the caching 
                strategies and the distribution) 
            Private 
                Can only be accessed from your VPC using an interface VPC endpoint (ENI)
                Use a resource policy to define access
        Caching API responses
            Caching reduces the number of calls made to the backend
            Default TTL (time to live) is 300 seconds (min 0s, max 3600s)
            Caches are defined per stage
            Possible to override cache settings per method
            Clients can invalidate the cache with header 
                Cache-Control max-age=0 (with proper IAM authorization)
            Able to flush the entire cache (invalidate it) immediately
            Cache encryption option
            Cache capacity between 0.5GB to 237GB
        Security
            Load SSL certificates and use Route53 to define a CNAME
            Resource Policy (~S3 Bucket Policy) 
                control who can access the API
                Users from AWS accounts, IP or CIDR blocks, VPC or VPC Endpoints
            IAM Execution Roles for API Gateway at the API level
                To invoke a Lambda Function, an AWS service… 
            CORS (Cross-origin resource sharing)
                Browser based security
                Control which domains can call your API
        Authentication
             IAM based access (AWS_IAM)
                Good for providing access within your infrastructure
                Pass IAM credentials in headers through Sig V4
            Lambda Authorizer (formerly Custom Authorizer)
                Use Lambda to verify a custom OAuth / SAML / 3rd party authentication
            Cognito User Pools
                Client authenticates with Cognito
                Client passes the token to API Gateway
                API Gateway knows out-of-the-box how to verify to token
        Usage Plans & API Keys
            If you want to make an API available as an offering ($) to your customers
            Usage Plan
                who can access one or more deployed API stages and methods
                how much and how fast they can access them
                uses API keys to identify API clients and meter access
                configure throttling limits and quota limits that are enforced on individual client
            API Keys
                alphanumeric string values to distribute to your customers
                Ex WBjHxNtoAb4WPKBC7cGm64CBibIb24b4jt8jJHo9
                Can use with usage plans to control access
                Throttling limits are applied to the API keys
                Quotas limits is the overall number of maximum requests
            429 Too Many Requests
                Account level throttling across all APIs in a region
                Clients must implement retry mechanisms
        WebSocket API
            Two-way interactive communication between a user’s browser and a server
            Server can push information to the client
            This enables stateful application use cases
            WebSocket APIs are often used in real- time applications such as chat 
            applications, collaboration platforms, multiplayer games, and financial trading platforms.
            Works with AWS Services (Lambda, DynamoDB) or HTTP endpoints
        Private APIs
            Can only be accessed from your VPC by using an VPC Interface Endpoint
            Each VPC Interface Endpoint can be used to access multiple Private APIs
            API Gateway Resource Policy
            Allow or deny access to API from selected VPCs and VPC Endpoints, including across AWS accounts
            aws:SourceVpc and aws:SourceVpce
    AWS AppSync
        AppSync is a managed service that uses GraphQL
        GraphQL makes it easy for applications to get exactly the data they need.
        This includes combining data from one or more sources
            NoSQL data stores, Relational databases, HTTP APIs…
            Integrates
                DynamoDB, Aurora, Elasticsearch & others
            Custom sources with AWS Lambda
        Retrieve data in real-time with WebSocket or MQTT on WebSocket
        For mobile apps
            local data access & data synchronization
        It all starts with uploading one GraphQL schema
        Cognito Integration
            Perform authorization on Cognito users based on the groups they belong to
            In the GraphQL schema, you can specify the security for Cognito groups
    Route 53
        Record Types
            A 
                maps a hostname to IPv4
            AAAA
                maps a hostname to IPv6
            CNAME
                maps a hostname to another hostname
                The target is a domain name which must have an A or AAAA record
                Can’t create a CNAME record for the top node of a DNS namespace (Zone 
                Apex)
                Example: you can’t create for example.com, but you can create for www.example.com
            NS
                Name Servers for the Hosted Zone
                Control how traffic is routed for a domain
        CNAME vs.Alias
            CNAME
                Points a hostname to any other hostname. (app.mydomain.com => blabla.anything.com)
                ONLY FOR NON ROOT DOMAIN (aka. something.mydomain.com) 
            Alias
                Points a hostname to an AWS Resource (app.mydomain.com => blabla.amazonaws.com) 
                Works for ROOT DOMAIN and NON ROOT DOMAIN (aka mydomain.com) 
                Free of charge 
                Native health check
                You cannot set an ALIAS record for an EC2 DNS name
        Records TTL (Time To Live)
            High TTL – e.g., 24 hr
                Less traffic on Route 53
                Possibly outdated records
            Low TTL – e.g., 60 sec.
                More traffic on Route 53 ($$)
                Records are outdated for less time
                Easy to change records
            Except for Alias records, TTL is mandatory for each DNS record
        Routing Policies
            Simple
                Typically, route traffic to a single resource
                Can’t be associated with Health Checks
            Weighted
                Control the % of the requests that go to each specific resource
                Can be associated with Health Checks
                Use cases: load balancing between regions, testing new application versions…
            Latency-based
                Redirect to the resource that has the least latency close to us
                Super helpful when latency for users is a priority 
                Latency is based on traffic between users and AWS Regions
            Geolocation
                This routing is based on user location
                Should create a “Default” record (in case there’s no match on location)
            Geoproximity
                Route traffic to your resources based on the geographic location of users and resources
                Ability to shift more traffic to resources based on the defined bias
                To change the size of the geographic region, specify bias values
                    To expand (1 to 99) – more traffic to the resource
                    To shrink (-1 to -99) – less traffic to the resource
                Resources can be
                    AWS resources (specify AWS region)
                    Non-AWS resources (specify Latitude and Longitude)
                You must use Route 53 Traffic Flow to use this feature
            Failover
                Active-Passive
            Multi-Value
                Use when routing traffic to multiple resources
                Multi-Value is not a substitute for having an ELB
            IP-based Routing
                Routing is based on clients’ IP addresses
                You provide a list of CIDRs for your clients
                Example: route end users from a particular ISP to a specific endpoint
        Traffic flow
            Simplify the process of creating and maintaining records in large and complex configurations
            Visual editor to manage complex routing decision trees
            Configurations can be saved as Traffic Flow Policy
        Hosted Zones
            A container for records that define how to route traffic to a domain and its subdomains
            Public Hosted Zones
                contains records that specify how to route traffic on the Internet (public domain names)
            Private Hosted Zones
                contain records that specify how you route traffic within one or more VPCs (private domain names)
        Good to Know
            For internal private DNS (Private Hosted Zone), you must enable the VPC settings 
            enableDnsHostnames and enableDnsSupport
        DNS Security Extensions (DNSSEC)
            A protocol for securing DNS traffic, verifies DNS data integrity and origin
            Protects against Man in the Middle (MITM) attacks
            Route 53 supports both DNSSEC for Domain Registeration and DNSSEC Signing
            Works only with Public Hosted Zones
        Route 53 with 3rd Registrar
            You can buy the domain out of AWS and use Route 53 as the DNS provider
            Update the NS records on the 3rd party Registrar
        Health Checks
            HTTP Health Checks are only for public resources
            Health Checks are integrated with CW metrics
            Calculated Health Checks
                Combine the results of multiple Health Checks into a single Health Check
                You can use OR, AND, or NOT
                Specify how many of the health checks need to pass to make the parent pass
            Private Hosted Zones
                Route 53 health checkers are outside the VPC 
                They can’t access private endpoints (private VPC or on-premises resource)
                You can create a CloudWatch Metric and associate a CloudWatch Alarm, then create a Health Check that checks the alarm itself
        Hybrid DNS
            By default, Route 53 Resolver automatically answers DNS queries for
                Local domain names for EC2 instances 
                Records in Private Hosted Zones 
                Records in public Name Servers
            resolving DNS queries between VPC (Route 53 Resolver) and your networks (other DNS Resolvers)
            Networks can be
                VPC itself / Peered VPC
                On-premises Network (connected through Direct Connect or AWS VPN)
        Resolver Endpoints
            Inbound Endpoint
                DNS Resolvers on your network can forward DNS queries to Route 53 Resolver
                Allows your DNS Resolvers to resolve domain names for AWS resources (e.g., EC2 instances) 
                and records in Route 53 Private Hosted Zones
                ex: on-prem to AWS 
            Outbound Endpoint
                Route 53 Resolver conditionally forwards DNS queries to your DNS Resolvers
                Use Resolver Rules to forward DNS queries to your DNS Resolvers
                ex: AWS to on-prem 
                Resolver Rules
                    Control which DNS queries are forwarded to DNS Resolvers on your network
                    Conditional Forwarding Rules
                        Forward DNS queries for a specified domain and all its subdomains 
                        to target IP addresses
                    System Rules
                        Selectively overriding the behavior defined in Forwarding Rules 
                        (e.g., don’t forward DNS queries for a subdomain acme.example.com)
                    Auto-defined System Rules
                        Defines how DNS queries for selected domains are resolved 
                        (e.g., AWS internal domain names, Privated Hosted Zones)

    AWS Global Accelerator
        Leverage the AWS internal network to route to your application
        2 Anycast IP are created for your application
        The Anycast IP send traffic directly to Edge Locations
        The Edge locations send the traffic to your application
        Works with 
            Elastic IP
            EC2 instances
            ALB, NLB, public or private
        Consistent Performance
            Intelligent routing to lowest latency and fast regional failover
            No issue with client cache (because the IP doesn’t change)
            Internal AWS network
        Health Checks
            Global Accelerator performs a health check of your applications
            Helps make your application global (failover less than 1 minute for unhealthy)
            Great for disaster recovery (thanks to the health checks)
        Security
            only 2 external IP need to be whitelisted
            DDoS protection thanks to AWS Shield
        AWS Global Accelerator vs CloudFront
            They both use the AWS global network and its edge locations around the world
            Both services integrate with AWS Shield for DDoS protection.
            CloudFront 
                Improves performance for both cacheable content (such as images and videos) 
                Dynamic content (such as API acceleration and dynamic site delivery)
                Content is served at the edge
            Global Accelerator
                Improves performance for a wide range of applications over TCP or UDP 
                Proxying packets at the edge to applications running in one or more AWS Regions.
                Good fit for non-HTTP use cases, such as gaming (UDP), IoT (MQTT), or Voice over IP
                Good for HTTP use cases that require static IP addresses
                Good for HTTP use cases that required deterministic, fast regional failover
    AWS Outposts
        AWS Outposts are "server racks" that offers the same AWS infrastructure, services, APIs & tools
        to build your own applications on-premises just as in the cloud
        AWS will setup and manage "Outposts Racks" within your on-premises infrastructure 
        and you can start leveraging AWS services on-premises
        You are responsible for the Outposts Rack physical security
        Benefits
            Low-latency access to on-premises systems
            Local data processing
            Data residency
            Easier migration from on-premises to the cloud
            Fully managed service
    AWS WaveLength
        WaveLength Zones are infrastructure deployments embedded within the telecommunications providers
        datacenters at the edge of the 5G networks
        Brings AWS services to the edge of the 5G networks
        Example: EC2, EBS, VPC…
        Ultra-low latency applications through 5G networks
        Traffic doesn’t leave the Communication Service Provider’s (CSP) network
        High-bandwidth and secure connection to the parent AWS Region
        No additional charges or service agreements
        Use cases: Smart Cities, ML-assisted diagnostics, Connected Vehicles, Interactive Live Video Streams,
        AR/VR, Real-time Gaming, …
    AWS Local Zones
        Places AWS compute, storage, database, and other selected AWS services closer to end users to run 
        latency-sensitive applications
        Extend your VPC to more locations – "Extension of an AWS Region"
        Compatible with EC2, RDS, ECS, EBS, ElastiCache, Direct Connect …
    Storage
        EBS - Elastic Block Storage
            Network drive you attach to ONE instance only
            Linked to a specific availability zone (transfer: snapshot => restore) 
            Volumes can be resized 
            Make sure you choose an instance type that is EBS optimized to enjoy maximum throughput
            Volume Types
                gp2 / gp3 (SSD)
                    General purpose SSD volume that balances price and performance for a 
                    wide variety of workloads
                o1 / io2 Block Express
                    Highest-performance SSD volume for mission-critical low- latency or 
                    high-throughput workloads
                st1 (HDD) 
                    Low cost HDD volume designed for frequently accessed, throughput- intensive workloads
                sc1 (HDD)
                    Lowest cost HDD volume designed for less frequently accessed workloads
            Only gp2/gp3 and io1/io2 can be used as boot volumes
            Snapshots
                Incremental – only backup changed blocks
                EBS backups use IO, and you shouldn’t run them while your application is handling a lot of traffic 
                Snapshots will be stored in S3 (but you won’t directly see them)
                Not necessary to detach volume to do snapshot, but recommended
                Can copy snapshots across region (for DR)
                Can make Image (AMI) from Snapshot
                EBS volumes restored by snapshots need to be pre-warmed (use the Fast Snapshot Restore FSR feature or fio/dd command to read the entire volume)
            Amazon Data Lifecycle Manager
                Automate the creation, retention, and deletion of EBS snapshots and EBS-backed AMIs
                Schedule backups, cross-account snapshot copies, delete outdated backups, …
                Uses resource tags to identify the resources (EC2 instances, EBS volumes)
                Can’t be used to manage snapshots/AMIs created outside DLM
                Can’t be used to manage instance-store backed AMIs
                Amazon Data Lifecycle Manager vs. AWS Backup
                    Use Data Lifecycle Manager
                        when you want to automate the creation, retention, and deletion of EBS Snapshots
                    Use AWS Backup
                        to manage and monitor backups across the AWS services you use,including EBS volumes, 
                        from a single place 
            Multi-Attach – io1/io2 family
                Attach the same EBS volume to multiple EC2 instances in the same AZ
                Each instance has full read & write permissions to the volume
                Use case:
                    Achieve higher application availability in clustered Linux applications (ex: Teradata)
                    Applications must manage concurrent write operations
                Must use a file system that’s cluster-aware (not XFS, EXT4, etc…)
        Local EC2 Instance Store
            Physical disk attached to the physical server where your EC2 is
            Very High IOPS (because physical) 
            Disks up to 7.5 TiB (can change over time), stripped to reach 60TiB (can change over time…)
            Block Storage (just like EBS) 
            Cannot be increased in size 
            Risk of data loss if hardware fails
        Instance Store vs EBS
            Instance store is physically attached to the machine (ephemeral/non-persistent storage)
            EBS is a network drive (persistent)
            Pros:(for instance store)
                Better I/O performance (EBS gp2 has a max IOPS of 16000, io1 of 64000, io2 
                Block Express of 256000)
                Good for buffer / cache / scratch data / temporary content
                Data survives reboots
            Cons:
                On stop or termination, the instance store is lost
                You can’t resize the instance store
                Backups must be operated by the user
        EFS – Elastic File System
            Managed NFS (network file system) that can be mounted on many EC2
            EFS works with EC2 instances in multi-AZ, & on–premises (DX & VPN)
            Highly available, scalable, expensive (3x gp2), pay per GB used
            Use cases: content management, web serving, data sharing, WordPress
            Compatible with Linux based AMI (not Windows), POSIX-compliant
            Uses NFSv4.1 protocol
            Uses security group to control access to EFS
            Encryption at rest using KMS
            POSIX file system (~Linux) that has a standard file API
            File system scales automatically, pay-per-use, no capacity planning
            EFS Scale
                1000s of concurrent NFS clients, 10 GB+ /s throughput
                Grow to Petabyte-scale network file system, automatically
            Performance Mode (set at EFS creation time)
                General Purpose (default) – latency-sensitive use cases (web server, CMS, etc…)
                Max I/O – higher latency, throughput, highly parallel (big data, media processing)
            Throughput Mode
                Bursting – 1 TB = 50MiB/s + burst of up to 100MiB/s
                Provisioned – set your throughput regardless of storage size, ex: 1 GiB/s for 1 TB storage
                Elastic – automatically scales throughput up or down based on your workloads
                    Up to 3GiB/s for reads and 1GiB/s for writes
                    Used for unpredictable workloads
            Storage Classes
                Storage Tiers (lifecycle management feature – move file after N days)
                Standard
                    for frequently accessed files
                Infrequent access (EFS-IA)
                    cost to retrieve files, lower price to store.
                Archive
                    rarely accessed data (few times each year), 50% cheaper
                Implement lifecycle policies to move files between storage tiers
            Access Points
                Easily manage applications access to NFS environments
                Enforce a POSIX user and group to use when accessing the file system
                Restrict access to a directory within the file system and optionally specify a 
                different root directory
                Can restrict access from NFS clients using IAM policies
            File System Policies
                Resource-based policy to control access to EFS File Systems (same as S3 bucket policy)
                By default, it grants full access to all clients
            Cross-Region Replication
                Replicate objects in an EFS file system to another AWS Region
                Setup for new or existing EFS file systems
                Provides RPO and RTO of minutes
                Doesn’t affect the provisioned throughput of the EFS file system
                Use cases: meet your compliance and business continuity goals
        S3 - Simple Storage Service 
            Object storage, serverless, unlimited storage, pay-as-you-go 
            Good to store static content (image, video files) 
            Access objects by key, no indexing facility 
            Not a filesystem, cannot be mounted natively on EC2
            Replication (Versioning enabled)
                Cross Region Replication (CRR)
                Same Region Replication (SRR)
                Combine with Lifecycle Rules
                Helpful to reduce latency, disaster recovery, security
            S3 Standard – General Purpose
                99.99% Availability
                Used for frequently accessed data
                Low latency and high throughput
                Sustain 2 concurrent facility failures
            S3 Infrequent Access 
                less frequently accessed, but requires rapid access
                types 
                    Standard IA 
                    One Zone IA 
            S3 Glacier Storage
                meant for archiving / backup
                price for storage + object retrieval cost
                S3 Glacier Instant Retrieval
                    great for data accessed once a quarter
                S3 Glacier Flexible Retrieval
                    Expedited (1 to 5 minutes), Standard (3 to 5 hours), Bulk (5 to 12 hours)
                S3 Glacier Deep Archive
                    Standard (12 hours), Bulk (48 hours)
            S3 Intelligent-Tiering
                Small monthly monitoring and auto-tiering fee
                Moves objects automatically between Access Tiers based on usage
                There are no retrieval charges in S3 Intelligent-Tiering
            Event Notifications
                S3:ObjectCreated, S3:ObjectRemoved, S3:ObjectRestore, S3:Replication…
                Object name filtering possible (*.jpg)
                Use case: generate thumbnails of images uploaded to S3
                Can create as many “S3 events” as desired
                Advanced filtering
                    options with JSON rules (metadata, object size, name...)
                Multiple Destinations 
                    ex Step Functions, Kinesis Streams / Firehose…
                EventBridge Capabilities 
                    Archive, Replay Events, Reliable delivery
            Multi-Part upload
                recommended for files > 100MB, must use for files > 5GB
                Can help parallelize uploads (speed up transfers)
            S3 Transfer Acceleration
                Increase transfer speed by transferring file to an AWS edge location which will forward 
                the data to the S3 bucket in the target region
                Compatible with multi-part upload
            S3 Byte-Range Fetches
                Parallelize GETs by requesting specific byte ranges
                Better resilience in case of failures
            S3 Analytics – Storage Class Analysis
                Recommendations for Standard and Standard IA
                    Does NOT work for One-Zone IA or Glacier
                Report is updated daily
                24 to 48 hours to start seeing data analysis    
                Visualize data in Amazon QuickSight
                Good first step to put together Lifecycle Rules (or improve them)
            S3 Storage Lens
                Understand, analyze, and optimize storage across entire AWS Organization
                Discover anomalies, identify cost efficiencies, and apply data protection best 
                practices across entire AWS Organization (30 days usage & activity metrics)
                Default dashboard or create your own dashboards
                Can be configured to export metrics daily to an S3 bucket (CSV, Parquet)
                default dashboard
                    Visualize summarized insights and trends for both free and advanced metrics
                    Default dashboard shows Multi-Region and Multi-Account data
                    Preconfigured by Amazon S3
                Metrics 
                    Summary
                    Cost-Optimization
                    Data-Protection
                    Access-management
                    Event Metrics
                    Performance Metrics 
                    Activity Metrics
                    Detailed Status Code Metrics
        Amazon FSx
            Launch 3rd party high-performance file systems on AWS
            FSx for Lustre
                Lustre is a type of parallel distributed file system, for large-scale computing
                name Lustre is derived from Linux and cluster
                for Machine Learning, High Performance Computing (HPC)
                Video Processing, Financial Modeling, Electronic Design Automation
                Seamless integration with S3
                    Can "read S3" as a file system (through FSx)
                    Can write the output of the computations back to S3 (through FSx)
                Can be used from on-premises servers (VPN or Direct Connect)
                Scratch File System
                    Temporary storage
                    Data is not replicated (doesn’t persist if file server fails)
                    High burst (6x faster, 200MBps per TiB)
                    Usage: short-term processing, optimize costs
                Persistent File System
                    Long-term storage
                    Data is replicated within same AZ 
                    Replace failed files within minutes
                    Usage: long-term processing, sensitive data
            FSx for NetApp ONTAP
                File System compatible with NFS, SMB, iSCSI protocol
                Move workloads running on ONTAP or NAS to AWS
                Point-in-time instantaneous cloning
            FSx for Windows File Server
                Supports SMB protocol & Windows NTFS
                Microsoft Active Directory integration, ACLs, user quotas
                Can be mounted on Linux EC2 instances
                Can be accessed from your on-premises infrastructure (VPN or Direct Connect)
                Data is backed-up daily to S3
            FSx for OpenZFS
                Managed OpenZFS file system on AWS
                File System compatible with NFS (v3, v4, v4.1, v4.2)
                Point-in-time instantaneous cloning
        AWS DataSync
            Move large amount of data to and from
                On-premises / other cloud to AWS (NFS, SMB, HDFS, S3 API…) – needs agent
                AWS to AWS (different storage services) – no agent needed
            Can synchronize to
                Amazon S3 (any storage classes – including Glacier)
                Amazon EFS
                Amazon FSx (Windows, Lustre, NetApp, OpenZFS...)
            Replication tasks can be scheduled hourly, daily, weekly
            File permissions and metadata are preserved (NFS POSIX, SMB…)
            One agent task can use 10 Gbps, can setup a bandwidth limit
        AWS Data Exchange
            Find, subscribe to, and use third-party data in the cloud
            Once subscribed to a data product, you can use the AWS Data Exchange API to load data directly
            into Amazon S3 and then analyze it with variety of AWS analytics and machine learning services
            for Redshift
                query in an Amazon Redshift data warehouse in minutes
            for APIs
                Find and subscribe to third-party APIs with a consistent access using AWS SDKs
                Consistent AWS-native authentication and governance
        AWS Transfer Family
            fully-managed service for file transfers into and out of Amazon S3 or Amazon EFS 
            using the FTP protocol
            Supported Protocols
                AWS Transfer for FTP (File Transfer Protocol (FTP))
                AWS Transfer for FTPS (File Transfer Protocol over SSL (FTPS))
                AWS Transfer for SFTP (Secure File Transfer Protocol (SFTP))
            Integrate with existing authentication systems (Microsoft Active Directory,
            LDAP, Okta, Amazon Cognito, custom)
            Usage: sharing files, public datasets, CRM, ERP, …
            Endpoint Types
                Public Endpoint
                VPC Endpoint with Internal Access
                VPC Endpoint with Internet-facing Access
        Amazon CloudFront
            Content Delivery Network (CDN)
            Improves read performance, content is cached at the edge
            Protect against Network and Application layer attacks
            Integration with AWS Shield, AWS WAF, and Route 53
            Can expose external HTTPS and can talk to internal HTTPS backends
            Supports WebSocket protocol
            Origins
                S3 Bucket
                    For distributing files
                    Enhanced security with CloudFront Origin Access Control (OAC)
                    OAC is replacing Origin Access Identity (OAI)
                    CloudFront can be used as an ingress (to upload files to S3)
                S3 Bucket configured as a website
                    First, enable Static Website hosting on the bucket
                MediaStore Container & MediaPackage Endpoint
                    To deliver Video On Demand (VOD) or live streaming video using AWS Media Services
                Custom Origin (HTTP)
                    EC2 instance
                    Elastic Load Balancer (CLB or ALB)
                    API Gateway (for more control… otherwise use API Gateway Edge)
                    Any HTTP backend you want
            Origin Groups
                To increase high-availability and do failover
                one primary and one secondary origin
                Origins can be cross AWS Regions
            Geo Restriction
                Allow list
                    Allow your users to access your content only if they're in one of the countries 
                    on a list of approved countries.
                Block list
                    Prevent your users from accessing your content if they're in one of the countries
                    on a blacklist of banned countries.
                Note: the geo header CloudFront-Viewer-Country is in Lambda@Edge
            Price Classes
                Price Class All
                    all regions – best performance
                Price Class 200
                    most regions, but excludes the most expensive regions
                Price Class 100
                    only the least expensive regions
            Signed URL
                Signed URL with expiration to control access to content in CloudFront
                The Signed URL are generated by an API call into CloudFront as a trusted signer
            CloudFront Signed URL vs S3 Pre-Signed URL
                CloudFront Signed URL
                    Allow access to a path, no matter the origin
                    Account wide key-pair, only the root can manage it
                    Can filter by IP, path, date, expiration
                    Can leverage caching features
                S3 Pre-Signed URL
                    Issue a request as the person who pre-signed the URL
                    Uses the IAM key of the signing IAM principal
                    Limited lifetime
            Custom Error Pages
                Return an object to the viewer (e.g., .html) when your origin returns an 
                HTTP 4xx or 5xx status code to CloudFront
                Use Error Caching Minimum TTL to specify how long CloudFront caches the custom error pages
            Customization At The Edge
                Edge Function
                    A code that you write and attach to CloudFront distributions
                    Runs close to your users to minimize latency
                    Doesn’t have any cache, only to change requests/responses
                    Types 
                        CloudFront Functions
                        Lambda@Edge
                    Use cases
                        Manipulate HTTP requests and responses
                        Implement request filtering before reaching your application
                        User authentication and authorization
                        Generate HTTP responses at the edge
                        A/B Testing
                        Bot mitigation at the edge
                CloudFront Functions
                    Lightweight functions written in JavaScript
                    for high-scale, latency-sensitive CDN customizations
                    Sub-ms startup times, millions of requests/second
                    RuN at "Edge Locations"
                    process based isolation
                    Used to change Viewer requests and responses
                        Viewer Request – after CloudFront receives a request from a viewer
                        Viewer Response – before CloudFront forwards the response to the viewer
                    Native feature of CloudFront (manage code entirely within CloudFront)
                    use cases 
                        Cache key normalization
                        Header manipulation
                        URL rewrites or redirects
                        Request authentication & authorization
                            Create and validate user-generated tokens (e.g., JWT) to allow/deny requests
                CloudFront Lambda@Edge
                    Lambda functions written in NodeJS or Python
                    Scales to 1000s of requests/second
                    Runs at the nearest "Regional Edge Cache"
                    VM-based isolation
                    Used to change CloudFront requests and responses
                        Viewer Request – after CloudFront receives a request from a viewer
                        Origin Request – before CloudFront forwards the request to the origin 
                        Origin Response – after CloudFront receives the response from the origin 
                        Viewer Response – before CloudFront forwards the response to the viewer
                    use cases
                        Longer execution time (several ms)
                        Adjustable CPU or memory
                        Your code depends on a 3rd libraries (e.g., AWS SDK to access other AWS services)
                        Network access to use external services for processing
                        File system access or access to the body of HTTP requests
                    ex: 
                        Loading content based on User-Agent
                        Route to Different Origin
        Amazon ElastiCache
            managed Redis or Memcached
            Caches are in-memory databases with really high performance, low latency
            Helps make your application stateless
            AWS takes care of OS maintenance / patching, optimizations, setup, configuration, 
            monitoring, failure recovery and backups
            Using ElastiCache involves heavy application code changes
            Redis vs Memcached
                REDIS
                    Multi AZ with Auto-Failover
                    Read Replicas to scale reads and have high availability
                    Persistent, Data Durability
                        Append Only File (AOF), backup and restore features
                MEMCACHED
                    Multi-node for partitioning of data (sharding)
                    Non persistent
                    Backup and restore (Serverless)
                    Multi-threaded architecture
        DynamoDB
            NoSQL database, fully managed, massive scale
            Similar to Apache Cassandra (can migrate to DynamoDB)
            No disk space to provision, max object size is 400 KB
            Supports CRUD (Create Read Update Delete)
            Read: eventually or strong consistency 
            Supports transactions across multiple tables (ACID support)
            Backups available, point in time recovery
            Table classes: Standard and Infrequent Access (IA)
            Basics 
                DynamoDB is made of tables
                Each table has a Primary Key (must be decided at creation time)
                Each table can have an infinite number of items (= rows)
                Each item has attributes (can be added over time – can be null)
                Maximum size of a item is 400KB
                Data types supported are:
                    Scalar Types: String, Number, Binary, Boolean, Null
                    Document Types: List, Map
                    Set Types: String Set, Number Set, Binary Set
            Primary Keys
                Option 1: Partition Key only (HASH)
                    Partition key must be unique for each item 
                    Partition key must be “diverse” so that the data is distributed
                Option 2: Partition Key + Sort Key
                    The combination must be unique
                    Data is grouped by partition key
                    Sort key == range key
                    Example: users-games table
                    user_id for the partition key
                    game_id for the sort key
                    Example good sort key: timestamp
            Indexes
                Object = partition key + optional sort key + attributes
                LSI – Local Secondary Index
                    Keep the same primary key
                    Select an alternative sort key
                    Must be defined at table creation time
                GSI – Global Secondary Index
                    Change the partition key and optional sort key
                    Can be defined after the table is created
                You can only query by PK + sort key on the main table & indexes
            Important Features
                TTL
                    automatically expire row after a specified epoch date
                DynamoDB Streams
                    react to changes to DynamoDB tables in real time
                    Can be read by AWS Lambda, EC2…
                    24 hours retention of data
                Global Tables (cross region replication)
                    Active Active replication, many regions 
                    Must enable DynamoDB Streams 
                    Useful for low latency, DR purposes
            Amazon Kinesis Data Streams for DynamoDB
                You can use Kinesis Data Streams to capture item-level changes in DynamoDB
                Custom and longer data retention period (> 24 hours in DynamoDB Streams)
            DAX (DynamoDB Accelerator)
                Seamless cache for DynamoDB, no application re-write 
                Writes go through DAX to DynamoDB 
                Micro second latency for cached reads & queries 
                Solves the Hot Key problem (too many reads) 
                5 minutes TTL for cache by default 
                Up to 10 nodes in the cluster 
                Multi AZ (3 nodes minimum recommended for production) 
                Secure (Encryption at rest with KMS, VPC, IAM, CloudTrail…)
        Amazon OpenSearch (ex ElasticSearch)
            provide search and indexing capability
            Two modes
                Managed cluster 
                Serverless cluster
            OpenSearch Dashboards(ex Kibana)
                Provide real-time dashboards on top of the data that sits in OpenSearch
            Logstash:
                Log ingestion mechanism, use the "Logstash Agent"
                Alternative to CloudWatch Logs (you decide on retention and granularity)
            Use cases:
                Log Analytics
                Real Time application monitoring
                Security Analytics
                Full Text Search 
                Clickstream Analytics
                Indexing
        RDS
            Engines: PostgreSQL, MySQL, MariaDB, IBM DB2, Oracle, SQL Server
            Managed DB: provisioning, backups, patching, monitoring
            Launched within a VPC, usually in private subnet, control network access using 
            security groups (important when using Lambda)
            Storage by EBS, can increase volume size with auto-scaling
            Backups: automated with point-in-time recovery. Backups expire
            Snapshots: manual, can make copies of snapshots cross region
            RDS Events: get notified via SNS for events (operations, outages…)
            Multi AZ & Read Replicas
                Multi-AZ
                    Standby instance for failover in case of outage
                Read Replicas
                    Increase read throughput. Eventual consistency. 
                    Can be cross-region
                    Distributing Reads across Replicas
                        Amazon Route 53
            Security
                KMS encryption at rest for underlying EBS volumes / snapshots
                Transparent Data Encryption (TDE) for Oracle and SQL Server
                SSL encryption to RDS is possible for all DB (in-flight)
                IAM authentication for MySQL, PostgreSQL and MariaDB
                Authorization still happens within RDS (not in IAM)
                Can copy an un-encrypted RDS snapshot into an encrypted one
                CloudTrail cannot be used to track queries made within RDS
            IAM Authentication
                IAM database authentication works with MariaDB, MySQL and PostgreSQL
                You don’t need a password, just an authentication token obtained through 
                IAM & RDS API calls
                Auth token has a lifetime of 15 minutes
                Benefits
                    Network in/out must be encrypted using SSL
                    IAM to centrally manage users instead of DB
                    Can leverage IAM Roles and EC2 Instance profiles for easy integration
            RDS for Oracle
                Backups
                    RDS Backups for backups & restore to Amazon RDS for Oracle
                    Use Oracle RMAN (Recovery Manager) for backups & restore to-non RDS
                Real Application Clusters (RAC)
                    RDS for Oracle does NOT support RAC 
                    RAC is working on Oracle on EC2 Instances because you have full control
                RDS for Oracle supports Transparent Data Encryption (TDE) to encrypt data 
                before it’s written to storage
                DMS works on Oracle RDS
            RDS for MySQL
                You can use the native mysqldump to migrate a MySQL RDS DB to non-RDS
                The external MySQL database can run either on-premises in your data center, or
                on an Amazon EC2 instance
            RDS Proxy for AWS Lambda
                When using Lambda functions with RDS, it opens and maintains a database connection
                This can result in a "TooManyConnections" exception
                With RDS Proxy, you no longer need code that handles cleaning up idle connections
                and managing connection pools
                Supports IAM authentication or DB authentication, auto-scaling
                The Lambda function must have connectivity to the Proxy 
        Aurora
            DB Engines: PostgreSQL-compatible & MySQL-compatible
            Storage: automatically grows up to 128 TB, 6 copies of data, multi-AZ
            Read Replicas: up to 15 RR, reader endpoint to access them all
            Cross Region RR: entire database is copied (not select tables)
            Load / Offload data directly from / to S3: efficient use of resources
            Backup, Snapshots & Restore: same as RDS
            Endpoints
                Endpoint = Host Address + Port
                Cluster Endpoint (Writer Endpoint)
                    Connects to the current primary DB instance in the Aurora cluster
                    Used for all write operations in the DB cluster (inserts, updates, deletes, and queries)
                Reader Endpoint
                    Provides load-balancing for read only connections to all Aurora Replicas 
                    in the Aurora cluster
                    Used only for read operations
                Custom Endpoint
                    Represents a set on DB instances that you choose in the Aurora cluster
                    Used when you want to connect to different subsets of DB instances with
                    different capacities and configurations 
                Instance Endpoint
                    Connects to a specific DB instance in the Aurora cluster
                    Used when you want to diagnosis and fine tune a specific DB instance
            Aurora Logs
                Error log
                Slow query log
                General log
                The audit log
        Troubleshooting RDS & Aurora Performance
            Performance Insights
                find issues by waits, SQL statements, hosts and users
            CloudWatch Metrics
                CPU, Memory, Swap Usage
            Enhanced Monitoring Metrics
                at host level, process view, per-second metric
            Slow Query logs
        Aurora Serverless
            Automated database instantiation and auto - scaling based on actual usage 
            Good for infrequent, intermittent or unpredictable workloads 
            No capacity planning needed 
            Pay per second, can be more cost -effective
            Data API 
                Access Aurora Serverless DB with a simple API endpoint (no JDBC connection needed)
                Secure HTTPS endpoint to run SQL statements
                No persistent DB connections management
                Users must be granted permissions to Data API and Secrets Manager
        RDS Proxy for Aurora
            Ability to create an additional read-only endpoint that connects to Aurora Read Replicas only
        Global Aurora
            Aurora Cross Region Read Replicas
                Useful for disaster recovery
                Simple to put in place
            Aurora Global Database (recommended)
                1 Primary Region (read / write) 
                Up to 5 secondary (read-only) regions, replication lag is less than 1 second
                Up to 16 Read Replicas per secondary region Helps for decreasing latency
                Promoting another region (for disaster recovery) has an RTO of < 1 minute
                Ability to manage the RPO in Aurora for PostgreSQL
                Write Forwarding
                    Enables Secondary DB Clusters to forward SQL statements that perform 
                    write operations to the Primary DB Cluster 
                    Data is always changed first on the Primary DB Cluster, then replicated 
                    to the Secondary DB Clusters 
                    Primary DB Cluster always has an up-to-date copy of all data 
                    Reduces the number of endpoints to manage

    Service Communication
        AWS Step Functions
            Build serverless visual workflow to orchestrate your Lambda functions
            Represent flow as a JSON state machine
            Features: sequence, parallel, conditions, timeouts, error handling…
            Maximum execution time of 1 year
            Possibility to implement human approval feature
            If you chain Lambda functions using Step Functions, be mindful of the 
            added latency to pass the calls.
            Optimized Integrations
                Can invoke a Lambda function
                Run an AWS Batch job
                Run an ECS task and wait for it to complete
                Insert an item from DynamoDB
                Publish message to SNS, SQS
                Launch an EMR, Glue, or SageMaker jobs
                Launch another Step Function workflow…
            AWS SDK Integrations
                Access 200+ AWS services from your State Machine
            You can invoke a Step Function Workflow (State Machine) using
                AWS Management Console
                AWS SDK (StartExecution API call)
                AWS CLI (start-execution)
                AWS Lambda (StartExecution API call)
                API Gateway
                EventBridge
                CodePipeline
                Step Functions
            Tasks
                Lambda Tasks:
                    Invoke a Lambda function 
                Activity Tasks:
                    Activity worker (HTTP), EC2 Instances, mobile device, on premise DC
                    They poll the Step functions service
                Service Tasks:
                    Connect to a supported AWS service 
                    Lambda function, ECS Task, Fargate, DynamoDB, Batch job, SNS topic, SQS queue
                Wait Task:
                    To wait for a duration or until a timestamp
            Standard vs. Express Workflows 
                standard workflow
                    max duration 1 year
                express workflow 
                    max duration 5 minutes 
            Express Workflow
                Synchronous Express Workflows
                    Wait until the Workflow completes, then return the result
                    Examples: orchestrate microservices, handle errors, retries, parallel tasks
                Asynchronous Express Workflows
                    Doesn’t wait for the Workflow to complete
                    Examples: Workflows that don’t require immediate response, messaging, …
            Error Handling
                You can enable error handling, retries, and add alerting to Step Function State Machine
                Example: set up EventBridge to alert via email if a State Machine execution fails
        Amazon SQS
            Serverless, managed queue, integrated with IAM
            Can handle extreme scale, no provisioning required
            Used to decouple services
            Message size of max 256 KB (use a pointer to S3 for large messages)
            Can be read from EC2 (optional ASG), Lambda
            SQS could be used as a write buffer for DynamoDB 
            SQS FIFO
                receive messages in order they were sent
                300 messages/s without batching, 3000 /s with batching                            
            If a consumer fails to process a message within the Visibility Timeout… 
            the message goes back queue!
            We can set a threshold of how many times a message can go back to the queue
            Dead Letter Queue (DLQ)
                After the MaximumReceives threshold is exceeded, the message goes into a 
                Dead Letter Queue (DLQ)
                DLQ of a FIFO queue must also be a FIFO queue
                DLQ of a Standard queue must also be a Standard queue
                Make sure to process the messages in the DLQ before they expire:
                    Good to set a retention of 14 days in the DLQ
                Redrive to Source
                    Feature to help consume messages in the DLQ to understand what is wrong with them 
                    When our code is fixed, we can redrive the messages from the DLQ back into the source
                    queue (or any other queue) in batches without writing custom code
            Solution Architecture - Idempotency
                Messages can be processed twice by consumer (in case of failures, timeouts, etc)
                To hedge against that problem, implement idempotency at the consumer level
                Means the same action done twice by the consumer won’t duplicate the effect
        Amazon SNS
            What if you want to send one message to many receivers?
            The "event producer" only sends message to one SNS topic
            As many "event receivers" (subscriptions) as we want to listen to the SNS topic notifications
            Each subscriber to the topic will get all the messages
            Up to 12,500,000 subscriptions per topic
            subscribers 
                SQS 
                lambda 
                Kinesis Data firehose 
                HTTP(s) endpoints 
                SMS & mobile notifications
                emails
            Many AWS services can send data directly to SNS for notifications
            Topic Publish (using the SDK)
                Create a topic
                Create a subscription (or many)
                Publish to the topic 
            Direct Publish (for mobile apps SDK) (bypassing topic, directly to consumer)
                Create a platform application 
                Create a platform endpoint 
                Publish to the platform endpoint 
                Works with Google GCM, Apple APNS, Amazon ADM…
            SNS – FIFO Topic
                Ordering by Message Group ID
                    all messages in the same group are ordered
                Deduplication 
                    using a Deduplication ID or Content Based Deduplication
            Message Filtering
                JSON policy used to filter messages sent to SNS topic’s subscriptions
                If a subscription doesn’t have a filter policy, it receives every message
            Message Delivery Retries
                When a message is delivered to an SNS subscriber, in case of server-side errors, 
                a delivery policy is applied
            Custom Delivery Policies
                Only HTTP/S supports custom policies
            Dead Letter Queues
                After exhausting the delivery policy, messages that haven’t been delivered are 
                discarded unless you set a DLQ (Dead Letter Queue)
                DLQ are Amazon SQS queues or Amazon SQS FIFO queues (for SNS FIFO)
                Dead Letter Queues are attached to a subscription (rather than a topic)
            SNS Access Policies
                Useful for cross-account access to SNS topics 
                Useful for allowing other services ( S3…) to write to an SNS topic
            SNS + SQS: Fan Out
                Push once in SNS, receive in all SQS queues that are subscribers
                Make sure your SQS queue access policy allows for SNS to write
                Cross-Region Delivery: works with SQS Queues in other regions    
        Amazon MQ
            managed message broker service for RabbitMQ
            SQS, SNS are "cloud-native" services: proprietary protocols from AWS
            Traditional applications running from on-premises may use open protocols such as: 
            MQTT, AMQP, STOMP, Openwire, WSS
            When migrating to the cloud, instead of re-engineering the application to use SQS and SNS, 
            we can use Amazon MQ
            Amazon MQ doesn’t "scale" as much as SQS / SNS
            Amazon MQ runs on servers, can run in Multi-AZ with failover
            Amazon MQ has both queue feature (~SQS) and topic features (~SNS)
    Data Engineering
        Amazon Kinesis Data Streams
            Collect and store streaming data in real-time
            Retention between up to 365 days
            Ability to reprocess (replay) data by consumers
            Data can’t be deleted from Kinesis (until it expires)
            Data up to 1MB (typical use case is lot of “small” real-time data)
            Data ordering guarantee for data with the same “Partition ID”
            At-rest KMS encryption, in-flight HTTPS encryption
            Kinesis Producer Library (KPL) 
                write an optimized producer application
            Kinesis Client Library (KCL) 
                write an optimized consumer application
            Provisioned mode
                Choose number of shards
                Each shard gets 1MB/s in (or 1000 records per second)
                Each shard gets 2MB/s out
                Scale manually to increase or decrease the number of shards
                You pay per shard provisioned per hour
            On-demand mode:
                No need to provision or manage the capacity
                Default capacity provisioned (4 MB/s in or 4000 records per second)
                Scales automatically based on observed throughput peak during the last 30 days
                Pay per stream per hour & data in/out per GB
        Kinesis Data Firehose
            Fully Managed Service, no administration
            Near Real Time (Buffer based on time and size, optionally can be disabled)
            Load data into Redshift / Amazon S3 / OpenSearch / Splunk
            Automatic scaling
            Supports many data formats
            Data Conversions from JSON to Parquet / ORC (only for S3)
            Data Transformation through AWS Lambda (ex: CSV => JSON)
            Supports compression when target is Amazon S3 (GZIP, ZIP, and SNAPPY)
            Only GZIP is the data is further loaded into Redshift
            Pay for the amount of data going through Firehose
            Spark / KCL do not read from KDF
            Firehose Buffer Sizing
                Firehose accumulates records in a buffer
                The buffer is flushed based on time and size rules
                Buffer Size (ex: 32MB): if that buffer size is reached, it’s flushed
                Buffer Time (ex: 2 minutes): if that time is reached, it’s flushed
                Firehose can automatically increase the buffer size to increase throughput
                High throughput => Buffer Size will be hit
                Low throughput => Buffer Time will be hit
        Kinesis Data Streams vs Firehose
            Streams
                Going to write custom code (producer / consumer)
                Real time (~200 ms latency for classic, ~70 ms latency for enhanced fan-out)
                Must manage scaling (shard splitting / merging)
                Data Storage for 1 to 365 days, replay capability, multi consumers
                Use with Lambda to insert data in real-time to OpenSearch (for example)
            Firehose
                Fully managed, send to S3, Splunk, Redshift, OpenSearch
                Serverless data transformations with Lambda
                Near real time
                Automated Scaling
                No data storage
        Amazon Managed Service for Apache Flink (ex Kinesis Data Analytics for Apache Flink)
            Flink (Java, Scala or SQL) is a framework for processing data streams
            Run any Apache Flink application on a managed cluster on AWS
                Provisioned compute resources, parallel computation, automatic scaling
                Application backups (implemented as checkpoints and snapshots)
                Use any Apache Flink programming features to transform data
                *Important: Flink does not read from Amazon Data Firehose
        Amazon Managed Streaming for Apache Kafka (Amazon MSK)
            Alternative to Amazon Kinesis
            Allow you to create, update, delete clusters 
            MSK creates & manages Kafka brokers nodes & Zookeeper nodes for you
            Deploy the MSK cluster in your VPC, multi-AZ (up to 3 for HA)
            Automatic recovery from common Apache Kafka failures
            Data is stored on EBS volumes for as long as you want
            MSK Serverless
                Run Apache Kafka on MSK without managing the capacity
                MSK automatically provisions resources and scales compute & storage
        Kinesis Data Streams vs. Amazon MSK
            Kinesis Data Streams
                1 MB message size limit
                Data Streams with Shards
                Shard Splitting & Merging
                TLS In-flight encryption
                KMS at-rest encryption
            Amazon MSK
                1MB default, configure for higher (ex: 10MB)
                Kafka Topics with Partitions
                Can only add partitions to a topic
                PLAINTEXT or TLS In-flight Encryption
                KMS at-rest encryption
        AWS Batch
            Run batch jobs as Docker images
            1. Run on AWS Fargate (fully serverless offering)
            2. Dynamic provisioning of the instances (EC2 & Spot Instances) – in VPC
            No need to manage clusters, fully serverless
            You just pay for the underlying resources used
            Example: batch process of images, running thousands of concurrent jobs
            Schedule Batch Jobs using Amazon EventBridge
            Orchestrate Batch Jobs using AWS Step Functions
            Compute Environments
                Managed Compute Environment:
                    AWS Batch managed the capacity and instance types within the environment
                    You can choose EC2 On-Demand or Spot Instances
                    You can choose Fargate On-Demand or Fargate Spot Instances
                    You can set a maximum price for Spot Instances
                    Launched within your own VPC
                    If you launch within your own private subnet, make sure it has access to the ECS service
                    Either using a NAT gateway / instance or using VPC Endpoints for ECS
                Unmanaged Compute Environment
                    You control and manage EC2 instance configuration, provisioning and scaling
            Multi Node Mode
                large scale, good for HPC (high performance computing)
                Leverages multiple EC2 / ECS instances at the same time
                Good for tightly coupled workloads
                Represents a single job, and specified how many nodes to create for the job
                1 main node, and many child node. 
                Does not work with Spot Instances
                Works better if your EC2 launch mode is a placement group "cluster"
        Batch vs. Lambda
            Lambda:
                Time limit
                Limited runtimes (built in runtimes, or Docker images built for Lambda)
                Limited temporary disk space
                Serverless
            Batch:
                No time limit
                Any runtime as long as it’s packaged as a Docker image
                Rely on EBS / instance store for disk space
                Relies on EC2 (can be managed by AWS) or AWS Fargate
        Amazon EMR
            EMR stands for “Elastic MapReduce”
            EMR helps creating Hadoop clusters (Big Data) to analyze and process vast amount of data
            The clusters can be made of hundreds of EC2 instances
            Also supports Apache Spark, HBase, Presto, Flink…
            EMR takes care of all the provisioning and configuration of EC2
            Auto-scaling with CloudWatch
            Use cases: data processing, machine learning, web indexing, big data…
            Node types
                Master Node
                    Manage the cluster, coordinate, manage health – long running
                Core Node
                    Run tasks and store data – long running
                Task Node (optional)
                    Just to run tasks – usually Spot
            Purchasing options
                On-demand: reliable, predictable, won’t be terminated
                Reserved (min 1 year): cost savings (EMR will automatically use if available)
                Spot Instances: cheaper, can be terminated, less reliable
            Instance Configuration
                Uniform instance groups
                    select a single instance type and purchasing option for each node (has auto scaling)
                Instance fleet
                    select target capacity, mix instance types and purchasing options (no Auto Scaling)
        AWS Glue
            Managed extract, transform, and load (ETL) service
            Useful to prepare and transform data for analytics
            Fully serverless service
            Glue Data Catalog
                catalog of dataset
        Redshift
            Redshift is based on PostgreSQL, but it’s not used for OLTP
            It’s OLAP – online analytical processing (analytics and data warehousing)
            10x better performance than other data warehouses, scale to PBs of data
            Columnar storage of data (instead of row based)
            Massively Parallel Query Execution (MPP)
            Two modes
                Provisioned cluster
                Serverless cluster
            Has a SQL interface for performing the queries
            BI tools such as AWS Quicksight or Tableau integrate with it
            Leader node
                for query planning, results aggregation
            Compute node
                for performing the queries, send results to leader
            Backup & Restore, Security VPC / IAM / KMS, Monitoring
            Redshift Enhanced VPC Routing
                COPY / UNLOAD goes through VPC
            Redshift is provisioned, so it’s worth it when you have a sustained usage
            (use Athena if the queries are sporadic/irregular instead)
            Snapshots & DR
                Snapshots are point-in-time backups of a cluster, stored internally in S3
                Snapshots are incremental (only what has changed is saved)
                You can restore a snapshot into a new cluster
                Automated: every 8 hours, every 5 GB, or on a schedule. Set retention
                Manual: snapshot is retained until you delete it
                You can configure Amazon Redshift to automatically copy snapshots 
                (automated or manual) of a cluster to another AWS Region
            Redshift Spectrum
                Query data that is already in S3 without loading it 
                Must have a Redshift cluster available to start the query 
                The query is then submitted to thousands of Redshift Spectrum nodes
            Redshift Workload Management (WLM)
                Enables you to flexibly manage queries priorities within workloads
                Example: prevent short, fast-running queries from getting stuck behind long-running queries
                Define multiple query queues (Superuser queue, User-defined queues)
                Route queries to the appropriate queues at runtime
                Automatic WLM 
                    queues and resources managed by Redshift
                Manual WLM 
                    queues and resources managed by you
            Redshift Concurrency Scaling
                Redshift automatically adds additional cluster capacity (Concurrency-Scaling Cluster) 
                to process an increase in requests 
                Ability to decide which queries sent to the concurrency-Scaling Cluster using WLM 
                Charged per second
        DocumentDB
            DocumentDB is AWS implementation for MongoDB (which is a NoSQL database)
            MongoDB is used to store, query, and index JSON data
            DocumentDB storage automatically grows in increments of 10GB
            Automatically scales to workloads with millions of requests per seconds
            Pricing
                On-demand Instances (per second with minimum of 10 minutes) 
                Database I/O – amount of I/O used when read and write (per million I/Os) 
                Database Storage (per GB/month) 
                Backup Storage (per GB/month)
        Amazon Timestream
            Fully managed, fast, scalable, serverless time series database 
            Automatically scales up/down to adjust capacity 
            Store and analyze trillions of events per day 
            1000s times faster & 1/10th the cost of relational databases 
            Scheduled queries, multi-measure records, SQL compatibility 
            Data storage tiering: recent data kept in memory and historical data kept 
            in a cost-optimized storage            
            Built-in time series analytics functions 
            (helps you identify patterns in your data in near real-time)            
            Encryption in transit and at rest 
            Use cases: IoT apps, operational applications, real-time analytics, …
        Amazon Athena
            Serverless query service to analyze data stored in Amazon S3
            Uses standard SQL language to query the files (built on Presto)
            Supports CSV, JSON, ORC, Avro, and Parquet 
            Pricing: $5.00 per TB of data scanned
            Commonly used with Amazon Quicksight for reporting/dashboards
            Use cases: Business intelligence / analytics / reporting, analyze & 
            query VPC Flow Logs, ELB Logs, CloudTrail trails, etc... 
            Exam Tip: analyze data in S3 using serverless SQL, use Athena
            Performance Improvement
                Use columnar data for cost-savings (less scan)
                    Apache Parquet or ORC is recommended
                    Huge performance improvement
                    Use Glue to convert your data to Parquet or ORC
                Compress data for smaller retrievals
                Partition datasets in S3 for easy querying on virtual columns
            Federated Query
                Allows you to run SQL queries across data stored in relational, non-relational, object, 
                and custom data sources (AWS or on-premises) 
                Uses Data Source Connectors that run on AWS Lambda to run Federated Queries 
                (e.g., CloudWatch Logs, DynamoDB, RDS, …) 
                Store the results back in Amazon S3
        Amazon QuickSight
            Serverless machine learning-powered business intelligence service to create interactive dashboards 
            Fast, automatically scalable, embeddable, with per-session pricing 
            Use cases: 
                Business analytics 
                Building visualizations 
                Perform ad-hoc analysis 
                Get business insights using data 
            Integrated with RDS, Aurora, Athena, Redshift, S3… 
            In-memory computation using SPICE engine if data is imported into QuickSight 
            Enterprise edition
                Possibility to setup Column-Level security (CLS)
            Dashboard & Analysis
                Define Users (standard versions) and Groups (enterprise version)
                    These users & groups only exist within QuickSight, not IAM !!
                dashboard
                    is a read-only snapshot of an analysis that you can share
                    preserves the configuration of the analysis (filtering, parameters, controls, sort)
                To share a dashboard, you must first publish it
                Users who see the dashboard can also see the underlying data
        Comparison of warehousing technologies
            EMR
                Need to use Big Data tools such as Apache Hive, Spark
                One long-running cluster, many jobs, with auto-scaling, or one cluster per job?
                Purchasing options – Spot, On Demand, Reserved Instances
                Can access data in DynamoDB and / or S3
                Scratch data on EBS disks (HDFS) and long term storage in S3 (EMRFS)
            Athena
                Simple queries and aggregations, data must live in S3
                Serverless, simple SQL queries, out-of-the-box queries for many services (cost & billing..)
                Audit queries through CloudTrail
            Redshift
                Advanced SQL queries, must provision servers
                Can leverage Redshift Spectrum for serverless queries on S3
    
    Monitoring
        CloudWatch
            CloudWatch Metrics
                Provided by many AWS services
                EC2 standard: 5 minutes, detailed monitoring: 1 minute
                EC2 RAM is not a built-in metric
                Can create custom metrics: standard resolution 1 minute, high resolution 1 sec
            CloudWatch Alarms
                Can trigger actions: EC2 action (reboot, stop, terminate, recover), Auto Scaling, SNS
                Alarm events can be intercepted by Amazon EventBridge
            CloudWatch Dashboards
                Display metrics and alarms
                Can show metrics of multiple regions
            Synthetics Canary
                Configurable script that monitor your APIs, URLs, Websites, …
                Reproduce what your customers do programmatically to find issues before customers are impacted
                Checks the availability and latency of your endpoints and can store load time data and 
                screenshots of the UI
                Integration with CloudWatch Alarms
                Scripts written in Node.js or Python
                Programmatic access to a headless Google Chrome browser
                Can run once or on a regular schedule
                Blueprints
                    Heartbeat Monitor 
                        load URL, store screenshot and an HTTP archive file
                    API Canary 
                        test basic read and write functions of REST APIs
                    Broken Link Checker 
                        check all links inside the URL that you are testing
                    Visual Monitoring 
                        compare a screenshot taken during a canary run with a baseline screenshot
                    Canary Recorder 
                        used with CloudWatch Synthetics Recorder (record your actions on a website and
                        automatically generates a script for that)
                    GUI Workflow Builder 
                        verifies that actions can be taken on your webpage 
                        (e.g., test a webpage with a login form)
            CloudWatch Logs
                Log groups
                    arbitrary name, usually representing an application
                Log stream
                    instances within application / log files / containers
                    CloudWatch Logs can send logs to:
                        Amazon S3 (exports)
                        Kinesis Data Streams
                        Kinesis Data Firehose
                        AWS Lambda
                        ElasticSearch
                Metric Filter
                    can use filter expressions
                    For example, find a specific IP inside of a log
                    Or count occurrences of “ERROR” in your logs 
                    Metric filters can be used to trigger alarms
                Logs Insights
                    can be used to query logs and add queries to CloudWatch Dashboards
                S3 Export
                    S3 buckets must be encrypted with AES-256 (SSE-S3) or SSE-KMS
                    Log data can take up to 12 hours to become available for export
                    The API call is CreateExportTask
                    Not near-real time or real-time… use Logs Subscriptions instead
                Logs Subscriptions
                    real-time or near-real time
                    subcription filter 
                        used to filter the logs 
            CloudWatch Agent
                Install CW Agent using SSM (AWS Systems Manager) Run Command
                Install CW Agent using SSM State Manager
                Configure CW Agent by storing config in SSM Parameter Store
                used to monitor EC2 
        Amazon EventBridge (ex CloudWatch Events)
            Schedule
                Cron jobs (scheduled scripts)
            Event Pattern
                Event rules to react to a service doing something
            Trigger Lambda functions, send SQS/SNS messages…
            Event buses can be accessed by other AWS accounts using Resource-based Policies
            You can archive events (all/filter) sent to an event bus (indefinitely or set period)
            Ability to replay archived events
            Schema Registry
                EventBridge can analyze the events in your bus and infer the schema 
                The Schema Registry allows you to generate code for your application, 
                that will know in advance how data is structured in the event bus 
                Schema can be versioned
            Resource-based Policy
                Manage permissions for a specific Event Bus
                Example: allow/deny events from another AWS account or AWS region
                Use case: aggregate all events from your AWS Organization in a single AWS account or AWS region
        AWS X-Ray
            Visual analysis of our applications
            Tracing requests across your microservices
            Integrations with:
                EC2 – install the X-Ray agent
                ECS – install the X-Ray agent or Docker container
                Lambda
                Beanstalk - agent is automatically installed
                API Gateway – helpful to debug errors (such as 504)
            The X-Ray agent or services need IAM permissions to X-Ray   
        AWS Personal Health Dashboard
            Global service 
            Show how AWS outages directly impact you 
            Show the impact on your resources 
            List issues and actions you can do to remediate them 
            Will show maintenance events from AWS 
            Programmatically accessible through the AWS Health API 
            Aggregations across multiple accounts of an AWS Organization
            Health Event Notifications
                Use EventBridge (CloudWatch Events) to react to changes for AWS Health events 
                in your AWS account
                Example: receive email notifications when EC2 instances in your AWS account are 
                scheduled for updates
                Can’t be used to return public events from the Service Health Dashboard
                Use cases: send notifications, capture event information, take corrective action, …
    Deployment & Instance Management
        AWS Elastic Beanstalk
            developer centric view of deploying an application on AWS
            It uses all the component’s we’ve seen before:
                EC2, Auto Scaling Group, Elastic Load Balancers, RDS, etc…
            We still have full control over the configuration of each component
            Beanstalk is free but you pay for the underlying instances
            Support for many platforms
                Go
                Java SE
                Java with Tomcat
                .NET on Windows Server with IIS
                Node.js
                PHP
                Python
                Ruby
                Packer Builder
                Single Container Docker
                Multicontainer Docker
                Preconfigured Docker
            Beanstalk is great to "Replatform" your application from on-premises to the cloud
            Managed service
                Instance configuration / OS is handled by Beanstalk
                Deployment strategy is configurable but performed by Elastic Beanstalk
            Just the application code is the responsibility of the developer
            Three architecture models 
                Single Instance deployment
                    good for dev
                LB + ASG
                    great for production or pre-production web applications
                ASG only
                    great for non-web apps in production (workers, etc..)
            Web Server vs Worker Environment
                If your application performs tasks that are long to complete, offload these tasks 
                to a dedicated worker environment
                Decoupling your application into two tiers is common
                Example: processing a video, generating a zip file, etc
                You can define periodic tasks in a file cron.yaml
            Beanstalk Deployment Blue / Green
                Not a "direct feature" of Elastic Beanstalk 
                Zero downtime and release facility 
                Create a new "stage" environment and deploy v2 there 
                The new environment (green) can be validated independently and roll back if issues 
                Route 53 can be setup using weighted policies to redirect a little bit of 
                traffic to the stage environment 
                Using Beanstalk, "swap URLs" (DNS swap) when done with the environment test
        AWS CodeDeploy 
            We want to deploy our application automatically to many EC2 instances 
            These instances are not managed by Elastic Beanstalk 
            There are several ways to handle deployments using open source tools 
            (Ansible, Terraform, Chef, Puppet, etc…) 
            We can use the managed Service AWS CodeDeploy 
            CodeDeploy can deploy to: EC2, ASG, ECS & Lambda
            CodeDeploy to EC2
                Define how to deploy the application using appspec.yml + deployment strategy 
                Will do in -place update to your fleet of EC2 instances 
                Can use hooks to verify the deployment after each deployment phase
            CodeDeploy to ASG
                In place updates:
                    Updates current existing EC2 instances
                    Instances newly created by an ASG will also get automated deployments
                Blue / green deployment 
                    A new auto-scaling group is created (settings are copied) 
                    Choose how long to keep the old instances 
                    Must be using an ELB
            CodeDeploy to AWS Lambda
                Traffic Shifting feature 
                Pre and Post traffic hooks features to validate deployment 
                (before the traffic shift starts and after it ends) 
                Easy & automated rollback using CloudWatch Alarms 
                SAM framework natively uses CodeDeploy
            CodeDeploy to ECS
                Support for Blue/Green deployments for Amazon ECS and AWS Fargate 
                Setup is done within the ECS service definition 
                A new task set is created, and traffic is re-routed to the new task test. 
                Then if everything is stable for X minutes, the old task set is terminated 
                (so you have time to notice issues) 
                Supports Canary deployments (Canary10Percent5Minutes)
        AWS CloudFormation
            Infrastructure as code (IaC) in AWS
            Portability of stacks across multiple accounts and regions
            Backbone of the Elastic Beanstalk service
            Backbone of the Service Catalog service
            Backbone of the SAM (Serverless Application Model) framework
            Must-know service as a developer / sysops / devops
            Retaining Data on Deletes
                You can put a DeletionPolicy on any resource to control what happens when 
                the CloudFormation template is deleted 
                DeletionPolicy=Retain: 
                    Specify on resources to preserve / backup in case of CloudFormation deletes 
                    To keep a resource, specify Retain (works for any resource / nested stack) 
                DeletionPolicy=Snapshot: 
                    EBS Volume, ElastiCache Cluster, ElastiCache ReplicationGroup 
                    RDS DBInstance, RDS DBCluster, Redshift Cluster 
                DeletePolicy=Delete (default behavior): 
                    Note: for AWS::RDS::DBCluster resources, the default policy is Snapshot 
                    Note: to delete an S3 bucket, you need to first empty the bucket of its content
            Custom Resources (Lambda)
                You can define a Custom Resource in CloudFormation to address any of these use cases: 
                An AWS resource is not yet supported (new service for example) 
                An on-premises resource 
                Emptying an S3 bucket before being deleted 
                Fetch an AMI id etc 
            StackSets
                Create, update, or delete stacks across multiple accounts and regions with a single operation 
                Administrator account 
                    to create StackSets 
                Trusted accounts 
                    to create, update, delete stack instances from StackSets 
                When you update a stack set, all associated stack instances are updated 
                throughout all accounts and regions 
                Enable Automatic Deployment feature 
                    to automatically deploy to accounts in AWS Organization or OUs
            Drift
                CloudFormation allows you to create infrastructure 
                But it doesn’t protect you against manual configuration changes 
                How do we know if our resources have drifted? 
                We can use CloudFormation Drift! 
                Detect drift on an entire stack or on individual resources within a stack
            Resource Import                
                Import existing resources into existing/new stacks 
                You don’t need to delete and re-create the resources as part of a CloudFormation stack 
                During import operation, you’ll need 
                A template that describes the entire stack 
                (original stack resources & target resources to import) 
                A Unique identifier for each target resource (ex. BucketName for S3 buckets) 
                Each resource to import must have a DeletionPolicy attribute (any value) & Identifier 
                Can’t import the same resource into multiple stacks
        AWS Service Catalog
            Create and manage catalogs of IT services that are approved on AWS
            Some users just want a quick self-service portal to launch a set of authorized 
            products pre-defined by admins 
            Includes: virtual machines, databases, storage options, etc… 
            CloudFormation helps ensure consistency, and standardization by Admins 
            They are assigned to Portfolios (teams) 
            Teams are presented a self-service portal where they can launch the products 
            All the deployed products are centrally managed deployed services 
            Helps with governance, compliance, and consistency 
            Can give user access to launching products without requiring deep AWS knowledge 
            Integrations with “self-service portals” such as ServiceNow
        AWS SAM - Serverless Application Model
            Framework for developing and deploying serverless applications 
            All the configuration is YAML code. Examples: 
                Lambda Functions (AWS::Serverless::Function) 
                DynamoDB tables (AWS::Serverless::SimpleTable) 
                API Gateway (AWS::Serverless::API) 
                StepFunction - State Machine (AWS::Serverless::StateMachine) 
            SAM can help you to run Lambda, API Gateway, DynamoDB locally 
            SAM can use CodeDeploy to deploy Lambda functions (traffic shifting) 
            Leverages CloudFormation in the backend
        AWS Cloud Development Kit (CDK)
            use programming language to deploy both infra and applications
            Define your cloud infrastructure using a familiar language:
                JavaScript/TypeScript, Python, Java, and .NET
            The code is “compiled” into a CloudFormation template (JSON/YAML)
            You can therefore deploy infrastructure and application runtime code together
                Great for Lambda functions
                Great for Docker containers in ECS / EKS
        AWS Systems Manager
            Helps you manage your EC2 and on-premises systems at scale 
            Get operational insights about the state of your infrastructure 
            Easily detect problems 
            Patching automation for enhanced compliance 
            Works for both Windows and Linux OS 
            Integrated with CloudWatch metrics / dashboards 
            Integrated with AWS Config 
            Free service
            How it works? 
                We need to install the SSM agent onto the systems we control 
                Installed by default on Amazon Linux AMI & some Ubuntu AMI 
                If an instance can’t be controlled with Systems Manager, 
                it’s probably an issue with the SSM agent! 
                Make sure the EC2 instances have a proper IAM role to allow Systems Manager actions
            Run Command
                Execute a document (= script) or just run a command 
                Run command across multiple instances (using resource groups) 
                Rate Control / Error Control 
                Integrated with IAM & CloudTrail 
                No need for SSH 
                Results in the consol
            Send Command before an ASG Instance is Terminated
                Perform any action before the ASG terminates an EC2 instance 
                Create a ASG Lifecycle Hook that puts the instance in Terminating:Wait state 
                Monitor the Terminating:Wait state using EventBridge 
                Trigger a SSM Automation Document to perform the actions on the instance before termination
            Patch Managers
                Define a patch baseline to use (or multiple if you have multiple environments) 
                Define patch groups
                    define based on tags, example different environments (dev, test, prod)
                    use tag Patch Group 
                Define Maintenance Windows 
                    (schedule, duration, registered targets/patch groups and registered tasks) 
                Add the AWS-RunPatchBaseline Run Command 
                    as part of the registered tasks of the Maintenance Window 
                    (works cross platform Linux & Windows) 
                Define Rate Control (concurrency & error threshold) for the task 
                Monitor Patch Compliance using SSM Inventory
            Session Manager
                Allows you to start a secure shell on your EC2 and on-premises servers 
                Access through AWS Console, AWS CLI, or Session Manager SDK 
                Does not need SSH access, bastion hosts, or SSH keys 
                Supports Linux, macOS, and Windows 
                Log connections to your instances and executed commands 
                Session log data can be sent to S3 or CloudWatch Logs 
                CloudTrail can intercept StartSession events
            OpsCenter
                Resolve Operational Issues (OpsItems) related to AWS resources
                OpsItems – issues, events and alerts
                Aggregates information to resolve issues on each OpsItems such as:
                    AWS Config changes and relationships
                    CloudTrail Logs
                    CloudWatch Alarms
                    CloudFormation Stack information
                Provides Automation Runbooks that you can use to resolve issues
                EventBridge or CloudWatch Alarms can create OpsItems
        AWS Cloud Map
            A fully managed resource discovery service 
            Creates a map of the backend services/resources that your applications depend on 
            You register your application components, their locations, attributes, and 
            health status with AWS Cloud Map 
            Integrated health checking (stop sending traffic to unhealthy endpoints) 
            Your applications can query AWS Cloud Map using AWS SDK, API, or DNS
            ex: update endpoint from v1 to v2 
    
    Cost Control
        AWS Cost Allocation Tags
            With Tags we can track resources that relate to each other
            With Cost Allocation Tags we can enable detailed costing reports
            Just like Tags, but they show up as columns in Reports
            AWS Generated Cost Allocation Tags
                Automatically applied to the resource you create
                Starts with Prefix aws: (e.g. aws: createdBy)
                They’re not applied to resources created before the activation
            User tags
                Defined by the user
                Starts with Prefix user
            Cost Allocation Tags just appear in the Billing Console
            Takes up to 24 hours for the tags to show up in the report
        AWS Tag Editor
            Allows you to manage tags of multiple resources at once 
            You can add/update/delete tags 
            Search tagged/untagged resources in all AWS Region
        Trusted Advisor
            No need to install anything – high level AWS account assessment
            Analyze your AWS accounts and provides recommendation:
                Cost Optimization
                Performance
                Security
                Fault Tolerance
                Service Limits
                Operational Excellence
            Core Checks and recommendations – all customers
            Can enable weekly email notification from the console
            Full Trusted Advisor
                Available for Business & Enterprise support plans
                Ability to set CloudWatch alarms when reaching limits
                Programmatic Access using AWS Support API
            Can check if an S3 bucket is made public 
                But cannot check for S3 objects that are public inside of your bucket! 
                Use Amazon EventBridge / S3 Events instead / AWS Config Rules
            Service Limits
                Limits can only be monitored in Trusted Advisor (cannot be changed) 
                Cases must be created manually in AWS Support Centre to increase limits 
                OR use the AWS Service Quotas service
        AWS Service Quotas
            Notify you when you’re close to a service quota value threshold
            Create CloudWatch Alarms on the Service Quotas console
            Example: Lambda concurrent executions
            Helps you know if you need to request a quota increase 
            or shutdown resources before limit is reached
        AWS Savings Plan
            New pricing model to get a discount based on long-term usage
            Commit to a certain type of usage: ex $10 per hour for 1 to 3 years
            Any usage beyond the savings plan is billed at the on-demand price
            EC2 Instance Savings plan
                up to 72% - same discount as Standard RIs
                Select instance family (e.g. M5, C5…), and locked to a specific region
                Flexible across size (m5.large to m5.4xlarge), OS (Windows to Linux), tenancy 
            Compute Savings plan
                up to 66% - same discount as Convertible RIs
                Ability to move between instance family (move from C5 to M5), 
                region (Ireland to US), compute type (EC2, Fargate, Lambda), OS & tenancy
            SageMaker Savings plan (up to 64% off)
            S3 Cost Savings
                Can move between classes manually or using S3 Lifecycle configurations
                S3 Lifecycle Rules: transition objects between tiers
                Compress objects to save space
                S3 Requester Pays
                    the requester instead of the bucket owner pays the cost of the request and 
                    the data download from the bucket
                bucket owner always pays the cost of storing data
                If an IAM role is assumed, the owner account of that role pays for the request
        AWS Budgets
            Create budget and send alarms when costs exceeds the budget
            types of budgets
                Usage
                Cost
                Reservation
                Savings Plans 
            For Reserved Instances (RI)
                Track utilization
                Supports EC2, ElastiCache, RDS, Redshift
            Up to 5 SNS notifications per budget
            Can filter by: Service, Linked Account, Tag, Purchase Option, Instance 
            Type, Region, Availability Zone, API Operation, etc… 
            Same options as AWS Cost Explorer!
            2 budgets are free, then $0.02/day/budget
            Budget Actions
                Run actions on your behalf when a budget exceeds a certain cost or usage threshold
                Types 
                    Applying an IAM Policy to a user, group, or IAM role
                    Applying Service Control Policy (SCP) to an OU
                    Stop EC2 or RDS Instances
                Reduces unintentional overspending in your account
        Cost Explorer
            Visualize, understand, and manage your AWS costs and usage over time
            Create custom reports that analyze cost and usage data. 
            Analyze your data at a high level: total costs and usage across all accounts 
            Or Monthly, hourly, resource level granularity
            Choose an optimal Savings Plan (to lower prices on your bill)
            Forecast usage up to 12 months based on previous usage
        AWS Compute Optimizer
            Reduce costs and improve performance by recommending optimal AWS resources for your workloads 
            Helps you choose optimal configurations and right - size your workloads (over/under provisioned) 
            Uses Machine Learning to analyze your resources configurations and 
            their utilization CloudWatch metrics 
            Supported resources 
                EC2 instances 
                EC2 Auto Scaling Groups 
                EBS volumes 
                Lambda functions 
            Lower your costs by up to 25% 
            Recommendations can be exported to S3   
            CloudWatch Agent
                Needed to analyze Memory Utilization
                Not needed for CPU, NetworkIn/Out, DiskReadOps, DiskWriteOps, …  
        Reserved Instances
            Reserved Instances in an AWS Organization
                all accounts share the Reserved Instances and Savings Plan
                The payer account (Management account) of an organization 
                    can turn off Reserved Instance (RI) discount and Savings Plans discount sharing for any 
                    accounts in that organization, including the payer account
            Renewal of Reserved Instances
                You can queue (schedule and reserve ahead of time) your reserved instances
                To renew a RI, just queue an RI purchase whenever the previous one expires
    Migrations
        Cloud Migration Strategies: The 7Rs
            Retire
                Turn off things you don’t need 
            Retain 
                Do nothing for now 
                (it’s still a decision to make in a Cloud Migration)
            Relocate
                Move apps from on-premises to its Cloud version
                Move EC2 instances to a different VPC, AWS account or Region
            Rehost "lift and shift"
                Simple migrations by re-hosting on AWS
                No cloud optimizations being done, applications migrated as is
            Replatform "lift and reshape"
                Not changing the core architecture, but leverage some Cloud optimizations
                migrate your database to RDS
            Repurchase "drop and shop"
                Moving to a different product while moving to the Cloud
                Often you move to a SaaS platform
                ex:CRM to Salesforce.com, HR to Workday, CMS to Drupal
            Refactor / Re-architect
                Reimagining how the application is architected using Cloud Native features
                Move from a monolithic application to micro-services
                Example: move an application to Serverless architectures, use AWS S3
        AWS Storage Gateway
            Bridge between on-premises data and cloud data
            Use cases:
                disaster recovery
                backup & restore
                tiered storage
                on-premises cache & low-latency files access
            Types of Storage Gateway:
                S3 File Gateway 
                FSx File Gateway
                Volume Gateway
                Tape Gateway
                Amazon S3 File Gateway
                    Configured S3 buckets are accessible using the NFS and SMB protocol
                    Most recently used data is cached in the file gateway
                    Supports S3 Standard, S3 Standard IA, S3 One Zone A, S3 Intelligent Tiering
                    Transition to S3 Glacier using a Lifecycle Policy
                    Bucket access using IAM roles for each File Gateway
                    SMB Protocol has integration with Active Directory (AD) for user authentication
                Amazon FSx File Gateway                
                    Native access to Amazon FSx for Windows File Server                
                    Local cache for frequently accessed data                
                    Windows native compatibility (SMB, NTFS, Active Directory...)                 
                    Useful for group file shares and home directories
                Volume Gateway
                    Block storage using iSCSI protocol backed by S3
                    Backed by EBS snapshots which can help restore on-premises volumes!
                    Cached volumes: low latency access to most recent data
                    Stored volumes: entire dataset is on premise, scheduled backups to S3
                Tape Gateway
                    Some companies have backup processes using physical tapes
                    Virtual Tape Library (VTL) backed by Amazon S3 and Glacier
                    Back up data using existing tape-based processes (and iSCSI interface)
            Storage Gateway Hardware appliance
                Using Storage Gateway means you need on-premises virtualization 
                Otherwise, you can use a Storage Gateway Hardware Appliance 
                You can buy it on amazon.com 
                Works with File Gateway, Volume Gateway, Tape Gateway 
                Has the required CPU, memory, network, SSD cache resources 
                Helpful for daily NFS backups in small data centers
        AWS Snowball
            Highly-secure, portable devices to collect and process data at the edge, and migrate data 
            into and out of AWS 
            Helps migrate up to Petabytes of data
            If it takes more than a week to transfer over the network, use Snowball devices!
            
            Edge Computing
                Process data while it’s being created on an edge location
                These locations may have limited internet and no access to computing power
                Snowball Edge device to do edge computing
                Run EC2 Instances or Lambda functions at the edge
                Snowball Edge Storage Optimized
                    SSD 210TB
                Snowball Edge Compute Optimized
                    SSD 28 TB
                Use cases: preprocess data, machine learning, transcoding media
            Improving Transfer Performance
                Perform multiple write operations at one time - from multiple terminals
                Transfer small files in batches – zip up small files until at least 1MB
                Don't perform other operations on files during transfer
                Reduce local network use
                Eliminate unnecessary hops
            Amazon S3 Adapter for Snowball
                data transfer rate typically between 250 MB/s and 400 MB/s
        Database Migration Service (DMS)
            Quickly and securely migrate databases to AWS, resilient, self healing 
            The source database remains available during the migration 
            Supports: 
                Homogeneous migrations: ex Oracle to Oracle 
                Heterogeneous migrations: ex Microsoft SQL Server to Aurora 
            Continuous Data Replication using CDC 
            You must create an EC2 instance to perform the replication tasks
            Works over VPC Peering, VPN (site to site, software), Direct Connect
            Supports Full Load, Full Load + CDC, or CDC only            
            SOURCES:
            On-premises and EC2 instances databases: Oracle, MS SQL Server, MySQL, MariaDB, PostgreSQL,
            MongoDB, SAP, DB2
            Azure: Azure SQL Database
            Amazon RDS: all including Aurora 
            Amazon S3
            DocumentDB
        AWS Schema Conversion Tool (SCT)
            Convert your Database’s Schema from one engine to another
            Example OLTP: (SQL Server or Oracle) to MySQL, PostgreSQL, Aurora
            Example OLAP: (Teradata or Oracle) to Amazon Redshift
            You do not need to use SCT if you are migrating the same DB engine
        Snowball + Database Migration Service
            Larger data migrations can include many terabytes of information.
            AWS DMS can use Snowball Edge & Amazon S3 to speed up migration
            steps
                1.You use the AWS Schema Conversion Tool (AWS SCT) to extract the data 
                locally and move it to an Edge device.
                2. You ship the Edge device or devices back to AWS.
                3. After AWS receives your shipment, the Edge device automatically loads its 
                data into an Amazon S3 bucket.
                4. AWS DMS takes the files and migrates the data to the target data store. If you 
                are using change data capture (CDC), those updates are written to the 
                Amazon S3 bucket and then applied to the target data store.
        AWS Cloud Adoption Readiness Tool (CART)
            Helps organizations develop efficient and effective plans for cloud adoption and migrations
            Transforms your idea of moving to the cloud into a detailed plan that follows AWS best practices
            Answer a set of questions across six perspectives (business, people, process, platform, 
            operations, security)
            Generates a custom report on your level of migration readiness
        AWS Application Discovery Service
            Plan migration projects by gathering information about on-premises data centers
            Server utilization data and dependency mapping are important for migrations
            Agentless Discovery (AWS Agentless Discovery Connector)
                Open Virtual Appliance (OVA) package that can be deployed to a VMware host
                VM inventory, configuration, and performance history such as CPU, memory, and disk usage
                OS agnostic
            Agent-based Discovery (AWS Application Discovery Agent)
                System configuration, system performance, running processes, and details of the network 
                connections between systems
                Supports Microsoft Server, Amazon Linux, Ubuntu, RedHat, CentOS, SUSE…
            Resulting data can be exported as CSV or viewed within AWS Migration Hub
            Data can be explorer using pre-defined queries in Amazon Athena
            Migration Hub Data Exploration
                Allows you to use Amazon Athena to analyze data collected from on-premises 
                servers during discovery 
                Data is automatically stored in S3 bucket at regular intervals 
                Use Pre-defined or custom queries in Amazon Athena to analyze data 
                Example: type of processes running on each server 
                Ability to upload additional data sources such as Configuration Management 
                Database (CMDB) exports 
                Integrate Athena with QuickSight to visualize data
        AWS Application Migration Service (MGN)
            Lift-and-shift (rehost) solution which simplify migrating applications to AWS
            Converts your physical, virtual, and cloud-based servers to run natively on AWS
            Supports wide range of platforms, Operating Systems, and databases
            Minimal downtime, reduced costs
        Disaster Recovery
            preparing for and recovering from a disaster
            Recovery Point Objective (RPO)
                point at which we can restore data
            Recovery Time Objective (RTO)
                time taken to recover from disaster
            Disaster Recovery Strategies
                Backup and Restore
                    high RPO
                Pilot Light 
                    A small version of the app is always running in the cloud
                    Useful for the critical core (pilot light)
                    Faster than Backup and Restore as critical systems are already up
                Warm Standby
                    Full system is up and running, but at minimum size
                    Upon disaster, we can scale to production load
                Hot Site / Multi Site Approach
                    Very low RTO (minutes or seconds) – very expensive 
                    Full Production Scale is running AWS and On Premise
            Disaster Recovery Tips
                Backup 
                    EBS Snapshots, RDS automated backups / Snapshots, etc… 
                    Regular pushes to S3 / S3 IA / Glacier, Lifecycle Policy, Cross Region Replication 
                    From on-premises: Snowball or Storage Gateway 
                High Availability 
                    Use Route53 to migrate DNS over from Region to Region 
                    RDS Multi-AZ, ElastiCache Multi-AZ, EFS, S3 
                    Site to Site VPN as a recovery from Direct Connect 
                Replication 
                    RDS Replication (Cross Region), AWS Aurora + Global Database 
                    Database replication from on-premises to RDS 
                    Storage Gateway 
                Automation 
                    CloudFormation / Elastic Beanstalk to re-create a whole new environment 
                    Recover / Reboot EC2 instances with CloudWatch if alarms fail 
                    AWS Lambda functions for customized automations 
                Chaos 
                    Netflix has a "simian-army" randomly terminating EC2
            AWS Fault Injection Simulator (FIS)
                fully managed service for running fault injection experiments on AWS workloads
                Based on Chaos Engineering – stressing an application by creating disruptive events 
                (e.g., sudden increase in CPU or memory), observing how the system responds, and 
                implementing improvements
                Supports the following AWS services: EC2, ECS, EKS, RDS…
                Use pre-built templates that generate the desired disruptions
            AWS Elastic Disaster Recovery (DRS)
                Quickly and easily recover your physical, virtual, and cloud-based servers into AWS
                Example: protect your most critical databases (including Oracle, MySQL, and SQL Server), 
                enterprise apps (SAP), protect your data from ransomware attacks, …
                Continuous block-level replication for your servers
        On-premises strategy with aws
            Ability to download Amazon Linux 2 AMI as a VM (.iso format)
                VMWare, KVM, VirtualBox (Oracle VM), Microsoft Hyper-V
            AWS Application Discovery Service
                Gather information about your on-premises servers to plan a migration
                Server utilization and dependency mappings 
                Track with AWS Migration Hub
            AWS Application Migration Service (MGN)
                Replacing AWS Server Migration Services & CloudEndure Migration
                Incremental replication of on-premises live servers to AWS
                Migrates the entire VM into AWS
            AWS Elastic Disaster Recovery (DRS)
                Replacing CloudEndure Disaster Recovery
                Recover on-premises workloads onto AWS
            AWS Database Migration Service (DMS)
                replicate on-premises => AWS , AWS => AWS, AWS => on-premises
                    Works with various database technologies (Oracle, MySQL, DynamoDB, etc..)
        AWS Migration Evaluator
            Helps you build a data-driven business case for migration to AWS
            Provides a clear baseline of what your organization is running today
            Install Agentless Collector to conduct broad-based discovery
            Take a snapshot of on-premises foot-print, server dependepncies, …
            Analyze current state, define target state, then develop migration plan
        AWS Backup
            Fully managed service 
            Centrally manage and automate backups across AWS services 
            No need to create custom scripts and manual processes 
            Supported services: 
                Amazon EC2 / Amazon EBS 
                Amazon S3 
                Amazon RDS (all DBs engines) / Amazon Aurora / Amazon DynamoDB 
                Amazon DocumentDB / Amazon Neptune 
                Amazon EFS / Amazon FSx (Lustre & Windows File Server) 
                AWS Storage Gateway (Volume Gateway) 
            Supports cross-region backups 
            Supports cross-account backups
            Supports PITR for supported services
            On-Demand and Scheduled backups
            Tag-based backup policies
            You create backup policies known as "Backup Plans"
                Backup frequency (every 12 hours, daily, weekly, monthly, cron expression)
                Backup window
                Transition to Cold Storage (Never, Days, Weeks, Months, Years)
                Retention Period (Always, Days, Weeks, Months, Years)
            Vault Lock
                Enforce a WORM (Write Once Read Many) state for all the backups that you store in 
                your AWS Backup Vault
                Additional layer of defense to protect your backups against: 
                    Inadvertent or malicious delete operations 
                    Updates that shorten or alter retention periods
                Even the root user cannot delete backups when enabled

    AWS VPC  
        VPC
            A VPC must have a defined list of CIDR blocks, that cannot be changed
            Each CIDR within VPC: min size is /28, max size is /16 (65536 IP addresses)
            VPC is private, so only Private IP CIDR ranges are allowed       
        CIDR: Block of IP address
            Example: 192.168.0.0/26: 192.168.0.0 – 192.168.0.63 (64 IP)
            Used for security groups, route tables, VPC, subnets, etc… 
        Private IP
            10.0.0.0 – 10.255.255.255 (10.0.0.0/8) <= in big networks
            172.16.0.0 – 172.31.255.255 (172.31.0.0/12)
            192.168.0.0 – 192.168.255.255 (192.168.0.0/16) <= example: home networks
        Public IP
            All the rest        
        Subnets
            Within a VPC, defined as a CIDR that is a subset of the VPC CIDR
            All instances within subnets get a private IP
            First 4 IP and last one in every subnet is reserved by AWS
        Route Tables
            Used to control where the network traffic is directed to
            Can be associated with specific subnets
            The "most specific" routing rule is always followed (192.168.0.1/24 beats 0.0.0.0/0)
        Internet Gateway (IGW)
            Helps our VPC connect to the internet, HA, scales horizontally
            Acts as a NAT for instances that have a public IPv4 or public IPv6
        Public Subnets
            Has a route table that sends 0.0.0.0/0 to an IGW
            Instances must have a public IPv4 to talk to the internet
        Private Subnets
            Access internet with a NAT Instance or NAT Gateway setup in a public subnet
            Must edit routes so that 0.0.0.0/0 routes traffic to the NAT
        NAT Instance
            EC2 instance you deploy in a public subnet Edit the route in your private subnet to 
            route 0.0.0.0/0 to your NAT instance
            Not resilient to failure, limited bandwidth 
            based on instance type, cheap
            Must manage failover yourself 
            Must disable Source/Destination Check (EC2 setting)
        NAT Gateway
            Managed NAT solution, bandwidth scales automatically 
            Resilient to failure within a single AZ 
            Must deploy multiple NAT Gateways in multiple AZ for HA 
            Has an Elastic IP, external services see the IP of the NAT Gateway as the source
        Network ACL (NACL)
            Stateless firewall defined at the subnet level, applies to all instances within
            Support for allow and deny rules
            Stateless = return traffic must be explicitly allowed by rules
            Helpful to quickly and cheaply block specific IP addresses
        Security Groups
            Applied at the instance level, only support for allow rules, no deny rules
            Stateful = return traffic is automatically allowed, regardless of rules
            Can reference other security groups in the same region (peered VPC, cross-account)
        VPC Flows Logs
            Log internet traffic going through your VPC
            Can be defined at the VPC level, Subnet level, or ENI-level 
            Helpful to capture “denied internet traffic”
            Can be sent to CloudWatch Logs and Amazon S3
        Bastion Hosts
            SSH into private EC2 instances through a public EC2 instance (bastion host)
            You must manage these instances yourself (failover, recovery)
            SSM Session Manager is a more secure way to remote control without SSH
        IPv6 in short
            All IPv6 addresses are public, total 3.4×1038 addresses (vs 4.3 billion IPv4)
            Example CIDR: 2600:1f18:80c:a900::/56
            Addresses are "random" and can’t be scanned online (because too many)
        VPC support for IPv6
            Create an IPv6 CIDR for VPC & use an IGW (supports IPv6)
            Public subnet: 
                Create an instance with IPv6 support
                Create a route table entry to ::/0 (IPv6 "all") to the IGW
            Private subnet (instances cannot be reached by IPv6 but can reach IPv6): 
                Create an Egress-Only Internet Gateway in the VPC
                Add a route table entry for the private subnet from ::/0 to the Egress-Only IGW
        VPC Peering
            Connect two VPC, privately using AWS’ network 
            Make them behave as if they were in the same network 
            Must not have overlapping CIDR 
            VPC Peering connection is not transitive (must be established for each VPC that 
            need to communicate with one another) 
            You can do VPC peering with another AWS account 
            You must update route tables in each VPC’s subnets to ensure instances can communicate
            VPC peering can work inter-region, cross-account
            You can reference a security group of a peered VPC (works cross account)
            Longest Prefix Match
                VPC uses the longest prefix match to select the most specific route
            VPC Peering does not support edge to edge routing for NAT devices
        Transit Gateway
            For having transitive peering between thousands of VPC and on-premises, 
            hub-and-spoke (star) connection 
            Regional resource, can work cross-region 
            Share cross -account using Resource Access Manager (RAM) 
            You can peer Transit Gateways across regions 
            Route Tables: limit which VPC can talk with other VPC 
            Works with Direct Connect Gateway, VPN connections 
            Supports IP Multicast *(not supported by any other AWS service) 
            Instances in a VPC can access a NAT Gateway, NLB, PrivateLink, and EFS in others VPCs attached to the AWS Transit Gateway
            Central NAT Gateway
                The NAT Gateway is shared in the Egress-VPC 
                The private App VPC can access internet through the TGW 
            Sharing through RAM
                You can use AWS RAM to share a Transit Gateway for VPC attachments across accounts 
                or across AWS Organization
            Use Different Route Tables to Prevent VPC from Communicating
            Inter & Intra Region Peering
                Billed hourly for each peering attachment, no data processing charges
                If data goes cross-region through the attachment, standard charges
                Specify the Transit Gateway ID
        VPC Endpoints
            Endpoints allow you to connect to AWS Services using a private network instead of the 
            public www network
            They scale horizontally and are redundant
            No more IGW, NAT, etc… to access AWS Services
            VPC Endpoint Gateway 
                (S3 & DynamoDB)
            VPC Endpoint Interface 
                (all services)
            In case of issues:
                Check DNS Setting Resolution in your VPC
                Check Route Tables 
            VPC Endpoint Gateway
                Only works for S3 and DynamoDB, must create one gateway per VPC
                Must update route tables entries
                Gateway is defined at the VPC level 
                DNS resolution must be enabled in the VPC
                The same public hostname for S3 can be used
                Gateway endpoint cannot be extended out of a VPC (VPN, DX, TGW, peering)
            VPC Endpoints Interface
                Provision an ENI that will have a private endpoint interface hostname
                Leverage Security Groups for security
                Private DNS (setting when you create the endpoint)
                    The public hostname of a service will resolve to the private Endpoint Interface hostname
                    VPC Setting: "Enable DNS hostnames" and "Enable DNS Support" must be true
                Interface can be accessed from Direct Connect and Site-to-Site VPN
            VPC Endpoint Policies
                Endpoint Policies are JSON documents to control access to services
                Does not override or replace IAM user policies or service-specific policies 
                (such as S3 bucket policies)
                aws:sourceVpce
                    condition for VPC endpoint
                aws:sourceVpc
                    condition for VPC
                    when u want to restrict/allow access from all vpc endpoints
            AWS PrivateLink (VPC Endpoint Services)
                enables private connectivity between your Virtual Private Cloud (VPC) and supported AWS 
                services, services hosted by other AWS accounts, and AWS Marketplace services, without 
                exposing traffic to the public internet
                Most secure & scalable way to expose a service to 1000s of VPC (own or other accounts)
                Does not require VPC peering, internet gateway, NAT, route tables…
                Requires a network load balancer (Service VPC) and ENI (Customer VPC)
                If the NLB is in multiple AZ, and the ENI in multiple AZ, the solution is fault tolerant! 
        Site to Site VPN (AWS Managed VPN)
            on-premises 
                Setup a software or hardware VPN appliance to your on-premises network. 
                The on-premises VPN should be accessible using a public IP 
            AWS-side 
                Setup a Virtual Private Gateway (VGW) and attach to your VPC 
                Setup a Customer Gateway to point the on- premises VPN appliance 
            Two VPN connections (tunnels) are created for redundancy, encrypted using IPSec 
            Can optionally accelerate it using Global Accelerator (for worldwide networks)
            Route Propagation in Site-to-Site VPN
                Static Routing
                    Create static route in corporate data center for 10.0.0.1/24 through the CGW
                    Create static route in AWS for 10.3.0.0/20 through the VGW
                Dynamic Routing (BGP)
                    Uses BGP (Border Gateway Protocol) to share routes automatically (eBGP for internet)
                    We don’t need to update the routing tables, it will be done for us dynamically
                    Just need to specify the ASN (Autonomous System Number) of the CGW and VGW
            Site to Site VPN and Internet Access
                with NAT Gateway
                    NOT OKAY (blocked by NAT Gateway restrictions)
                with NAT Instance (self managed, more control)
                    OKAY 
                with VGW in AWS, CGW at on premise 
                    OKAY 
        AWS VPN CloudHub
            Can connect up to 10 Customer Gateway for each Virtual Private Gateway (VGW) 
            Low cost hub-and-spoke model for primary or secondary network connectivity between locations 
            Provide secure communication between sites, if you have multiple VPN connections 
            It’s a VPN connection so it goes over the public internet 
            Can be a failover connection between your on-premises locations
        AWS Client VPN
            Connect from your computer using OpenVPN to your private network 
            in AWS and on-premises
            Client VPN is compatible with VPC peering
            Access On-Premises resources through AWS with Client VPN
                S2S VPN btw on-premise and AWS 
        Direct Connect
            Provides a dedicated private connection from a remote network to your VPC
            Dedicated connection must be setup between your DC and AWS Direct Connect locations
            More expensive than running a VPN solution
            Private access to AWS services through VIF
            Bypass ISP, reduce network cost, increase bandwidth and stability
            Not redundant by default (must setup a failover DX or VPN)
            Virtual Interfaces
                Public VIF
                    connect to Public AWS Endpoints (S3 buckets, EC2 service, anything AWS …) 
                Private VIF
                    connect to resources in your VPC (EC2 instances, ALB, …) 
                Transit Virtual Interface
                    connect to resources in a VPC using a Transit Gateway 
                VPC Interface Endpoints can be accessed through Private VIF
            Connection Types
                Hosted Connections: 50Mbps, 500 Mbps, to 10 Gbps
                    Connection requests are made via AWS Direct Connect Partners
                    Capacity can be added or removed on demand 
                    1, 2, 5, 10 Gbps available at select AWS Direct Connect Partners
                Dedicated Connections: 1Gbps, 10 Gbps, 100 Gbps capacity
                    Physical ethernet port dedicated to a customer
                    Request made to AWS first, then completed by AWS Direct Connect Partners
                Wait times are often longer than 1 month to establish a new connection
            Encryption
                Data in transit is not encrypted but is private 
                AWS Direct Connect + VPN provides an IPsec-encrypted private connection 
                    direct connect from aws to aws direct connect location 
                    vpn from that location to on-premise 
                VPN over Direct Connect connection Uses Public VIF 
            Link Aggregation Groups (LAG)
                Get increased speed and failover by summing up existing DX connections into a logical one 
                Can aggregate up to 4 connections (active-active mode) 
                Can add connections over time to the LAG 
                All connections in the LAG: 
                    Must be dedicated connections 
                    Must have the same bandwidth 
                    Must terminate at the same AWS Direct Connect Endpoint 
                Can set a minimum number of connections for the LAG to function
            Direct Connect Gateway
                If you want to setup a Direct Connect to one or more VPC in many different regions 
                (same/cross account), you must use a Direct Connect Gateway
                SiteLink
                    Allows you to send data from on Direct Connect location to another
                    Bypassing AWS Regions
                    Use cases: create private network connections between on-premises data centers 
                    by connecting them to Direct Connect locations
                    Data is sent over the fastest path between Direct Connect locations
        VPC Flow Logs
            Capture information about IP traffic going into your interfaces:
                VPC Flow Logs
                Subnet Flow Logs
                Elastic Network Interface (ENI) Flow Logs
            Helps to monitor & troubleshoot connectivity issues
            Flow logs data can go to S3, CloudWatch Logs, and Kinesis Data Firehose
            Captures network information from AWS managed interfaces too: ELB, RDS, ElastiCache, 
            Redshift, WorkSpaces, NATGW, Transit Gateway…
            Can be used for analytics on usage patterns, or malicious behavior
            Query VPC flow logs using Athena on S3 or CloudWatch Logs Insights
        Network Protection on AWS
            Network Access Control Lists (NACLs)
            Amazon VPC security groups
            AWS WAF (protect against malicious requests)
            AWS Shield & AWS Shield Advanced
            AWS Firewall Manager (to manage them across accounts)
        AWS Network Firewall
            Protect your entire Amazon VPC
            From Layer 3 to Layer 7 protection 
            Any direction, you can inspect 
                VPC to VPC traffic 
                Outbound to internet 
                Inbound from internet 
                To / from Direct Connect & Site-to-Site VPN 
            Internally, the AWS Network Firewall uses the AWS Gateway Load Balancer 
            Rules can be centrally managed cross- account by AWS Firewall Manager to apply to many VPCs
            Fine Grained Controls
                Supports 1000s of rules
                    IP & port - example: 10,000s of IPs filtering
                    Protocol – example: block the SMB protocol for outbound communications
                    Stateful domain list rule groups: only allow outbound traffic to 
                    *.mycorp.com or third-party software repo
                    General pattern matching using regex
                Traffic filtering
                    Allow, drop, or alert for the traffic that matches the rules
                Active flow inspection 
                    to protect against network threats with intrusion prevention capabilities 
                    (like Gateway Load Balancer, but all managed by AWS)
                Send logs of rule matches to Amazon S3, CloudWatch Logs, Kinesis Data Firehose
    Machine Learning
        Amazon Rekognition
            Find objects, people, text, scenes in images and videos using ML
            Facial analysis and facial search to do user verification, people counting
            Create a database of “familiar faces” or compare against celebrities
            Use cases:
                Labeling 
                Content Moderation
                Text Detection
                Face Detection and Analysis (gender, age range, emotions…)
                Face Search and Verification
                Celebrity Recognition
                Pathing (ex: for sports game analysis)
            Content Moderation
                Detect content that is inappropriate, unwanted, or offensive (image and videos) 
                Used in social media, broadcast media, advertising, and e-commerce situations
                to create a safer user experience 
                Set a Minimum Confidence Threshold for items that will be flagged 
                Flag sensitive content for manual review in Amazon Augmented AI (A2I)
        Amazon Transcribe
            Automatically convert speech to text
            Uses a deep learning process called automatic speech recognition (ASR) to convert 
            speech to text quickly and accurately
            Automatically remove Personally Identifiable Information (PII) using Redaction
            Supports Automatic Language Identification for multi-lingual audio
            Use cases: 
                transcribe customer service calls
                automate closed captioning and subtitling
                generate metadata for media assets to create a fully searchable archive
        Amazon Polly
            Turn text into lifelike speech using deep learning 
            Allowing you to create applications that talk
            Lexicon
                Customize the pronunciation of words with Pronunciation lexicons 
                Stylized words: St3ph4ne => "Stephane"
                Acronyms: AWS => "Amazon Web Services"
                Upload the lexicons and use them in the SynthesizeSpeech operation
            Speech Synthesis Markup Language (SSML)
                enables more customization
                emphasizing specific words or phrases
                using phonetic pronunciation
                including breathing sounds, whispering
                using the Newscaster speaking style
        Amazon Translate
            Natural and accurate language translation
            Amazon Translate allows you to localize content - such as websites and applications 
            for international users, and to easily translate large volumes of text efficiently.
        Amazon Lex
            same technology that powers Alexa
            Automatic Speech Recognition (ASR) to convert speech to text
            Natural Language Understanding to recognize the intent of text, callers
            Helps build chatbots, call center bots
        Amazon Connect
            Receive calls, create contact flows, cloud-based virtual contact center
            Can integrate with other CRM systems or AWS
            No upfront payments, 80% cheaper than traditional contact center solutions
        Amazon Comprehend
            For Natural Language Processing – NLP 
            Fully managed and serverless service
            Uses machine learning to find insights and relationships in text
                Language of the text
                Extracts key phrases, places, people, brands, or events
                Understands how positive or negative the text is
                Analyzes text using tokenization and parts of speech
                Automatically organizes a collection of text files by topic
            Sample use cases: 
                analyze customer interactions (emails) to find what leads to a positive or negative experience
                Create and groups articles by topics that Comprehend will uncover
        Amazon Comprehend Medical
            detects and returns useful information in unstructured clinical text
                • Physician’s notes
                • Discharge summaries
                • Test results
                • Case notes
            Uses NLP to detect Protected Health Information (PHI)
            Store your documents in Amazon S3, analyze real-time data with Kinesis Data Firehose, 
            or use Amazon Transcribe to transcribe patient narratives into text that can 
            be analyzed by Amazon Comprehend Medical.
        Amazon SageMaker
            Fully managed service for developers / data scientists to build ML models
        Amazon Kendra
            Fully managed document search service powered by Machine Learning
            Extract answers from within a document (text, pdf, HTML, PowerPoint, MS Word, FAQs…)
            Natural language search capabilities
            Learn from user interactions/feedback to promote preferred results (Incremental Learning)
            Ability to manually fine-tune search results (importance of data, freshness, custom, …)
        Amazon Personalize
            Fully managed ML-service to build apps with real-time personalized recommendations
            ex: personalized product recommendations/re-ranking, customized direct marketing
            Same technology used by Amazon.com
            Integrates into existing websites, applications, SMS, email marketing systems, …
            Implement in days, not months (you don’t need to build, train, and deploy ML solutions)
            Use cases: retail stores, media and entertainment…
        Amazon Textract
            Automatically extracts text, handwriting, and data from any scanned documents using AI and ML
            Extract data from forms and tables
            Read and process any type of document (PDFs, images, …)
            Use cases:
                Financial Services (e.g., invoices, financial reports)
                Healthcare (e.g., medical records, insurance claims)
                Public Sector (e.g., tax forms, ID documents, passports)
    Other Services
        CodeCommit
            On July 25th 2024, AWS abruptly discontinued CodeCommit
        Amazon CodeGuru
            An ML-powered service for automated code reviews and application performance recommendations 
            Provides two functionalities
            CodeGuru Reviewer
                automated code reviews for static code analysis (development)
                Identify critical issues, security vulnerabilities, and hard-to-find bugs
            CodeGuru Profiler
                Helps understand the runtime behavior of your application
                visibility/recommendations about application performance during runtime (production)
                Features:
                    Identify and remove code inefficiencies
                    Improve application performance (e.g., reduce CPU utilization)
                    Decrease compute costs
                    Provides heap summary (identify which objects using up memory)
                    Anomaly Detection
                Support applications running on AWS or on- premise
        Kinesis Video Streams
            One video stream per streaming device (producers)
                Security cameras, body worn camera, smartphone
                Can use a Kinesis Video Streams Producer library
            Underlying data is stored in S3 (but we don’t have access to it)
            Cannot output the stream data to S3 (must build custom solution)
            Consumers:
                Consumed by EC2 instances for real time analysis, or in batch
                Can leverage the Kinesis Video Stream Parser Library
                Integration with AWS Rekognition for facial detection
        Amazon WorkSpaces
            Managed, Secure Cloud Desktop
            Great to eliminate management of on-premises VDI (Virtual Desktop Infrastructure)
            Pricing is either on-demand (pay per hour) or monthly subscription
            Secure, Encrypted, Network Isolation
            Integrated with Microsoft Active Directory
            WorkSpaces Application Manager (WAM)
                Deploy and Manage applications as virtualized application containers
                Provision at scale, and keep the applications updated using WAM
            Windows Updates
                By default, Amazon Workspaces are configured to install software updates
                Amazon WorkSpaces with Windows will have Windows Update turned on
                You have full control over the Windows Update frequency 
            Maintenance Windows
                Updates are installed during maintenance windows (you define them)
                Always On WorkSpaces: default is from 00h00 to 04h00 on Sunday morning
                AutoStop WorkSpaces: automatically starts once a month to install updates
                Manual maintenance: you define your windows and perform maintenance 
            IP Access Control Groups
                List of IP addresses / CIDR address ranges that users are authorized to connect from
                If users access WorkSpaces through VPN or NAT, the IP Access Control Group must 
                authorize the public IP of these
        Amazon AppStream 2.0
            Desktop Application Streaming Service
            Deliver to any computer, without acquiring, provisioning infrastructure
            The application is delivered from within a web browser
        Amazon AppStream 2.0 vs WorkSpaces
            Workspaces
                Fully managed VDI and desktop available
                The users connect to the VDI and open native or WAM applications 
                Workspaces are on-demand or always on
            AppStream 2.0
                Stream a desktop application to web browsers (no need to connect to a VDI)
                Works with any device (that has a web browser)
                Allow to configure an instance type per application type (CPU, RAM, GPU)
        AWS Device Farm
            Application testing service for your mobile and web applications 
            Test across real browsers and real mobiles devices 
            Fully automated using framework 
            Improve the quality of web and mobile apps 
            Generates videos and logs to document the issues encountered 
            Can remotely log-in to devices for debugging
        AWS Macie
            Amazon Macie is a fully managed data security and data privacy service that uses 
            machine learning and pattern matching to discover and protect your sensitive data in AWS.
            Macie helps identify and alert you to sensitive data, such as 
            personally identifiable information(PII)
        Amazon Simple Email Service (Amazon SES)
            Fully managed service to send emails securely, globally and at scale
            Allows inbound/outbound emails
            Reputation dashboard, performance insights, anti-spam feedback
            Provides statistics such as email deliveries, bounces, feedback loop results, email open
            Supports DomainKeys Identified Mail (DKIM) and Sender Policy Framework (SPF) 
            Flexible IP deployment: shared, dedicated, and customer-owned IPs
            Send emails using your application using AWS Console, APIs, or SMTP
            Use cases: transactional, marketing and bulk email communications
            Configuration Sets
                Configuration sets help you customize and analyze your email send events 
                Event destinations: 
                    Kinesis Data Firehose
                        receives metrics (numbers of sends, deliveries, opens, clicks, bounces, 
                        and complaints) for each email 
                    SNS: for immediate feedback on bounce and complaint information 
                IP pool management: use IP pools to send particular types of emails
        Amazon Pinpoint
            Scalable 2-way (outbound/inbound) marketing communications service 
            Supports email, SMS, push, voice, and in-app messaging 
            Ability to segment and personalize messages with the right content to customers 
            Possibility to receive replies 
            Scales to billions of messages per day 
            Use cases: run campaigns by sending marketing, bulk, transactional SMS messages 
            Versus Amazon SNS or Amazon SES 
                In SNS & SES you managed each message's audience, content, and delivery schedule 
                In Amazon Pinpoint, you create "message templates", delivery schedules, 
                highly-targeted segments, and full
        EC2 Image Builder
            Used to automate the creation of Virtual Machines or container images
            Automate the creation, maintain, validate and test EC2 AMIs
            Can be run on a schedule (weekly, whenever packages are updated, etc…)
            Free service (only pay for the underlying resources)
            Can publish AMI to multiple regions and multiple accounts
        AWS IoT Core
            allows you to easily connect IoT devices to the AWS Cloud            
            Serverless, secure & scalable to billions of devices and trillions of messages 
            Integrates with a lot of AWS services (Lambda, S3, SageMaker, etc.) 
            Build IoT applications that gather, process, analyze, and act on data